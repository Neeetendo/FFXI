function get_sets()
    mote_include_version = 2
    include('Mote-Include.lua')
end

function job_setup()
    state.Buff.Migawari = buffactive.migawari or false
    state.Buff.Doom = buffactive.doom or false
    state.Buff.Yonin = buffactive.Yonin or false
    state.Buff.Innin = buffactive.Innin or false
    state.Buff.Futae = buffactive.Futae or false
    include('Mote-TreasureHunter')
    info.default_ja_ids = S{35, 204}
    info.default_u_ja_ids = S{201, 202, 203, 205, 207}
    lugra_ws = S{'Blade: Kamu', 'Blade: Shun', 'Blade: Ten', 'Blade: Hi'}
	elemental_ws = S{'Blade: Teki', 'Blade: Ei', 'Blade: Yu', 'Blade: To','Aeolian Edge',}
    lockstyleset = 2
end

function user_setup()
    state.OffenseMode:options('STP', 'Normal', 'LowAcc', 'MidAcc', 'HighAcc')
    state.HybridMode:options('Normal', 'DT')
    state.WeaponskillMode:options('Normal', 'Acc')
    state.CastingMode:options('Normal', 'Resistant')
    state.IdleMode:options('Normal', 'DT')
    state.PhysicalDefenseMode:options('PDT', 'Evasion')
    state.MagicBurst = M(false, 'Magic Burst')
    state.CP = M(false, "Capacity Points Mode")
    state.Night = M(false, "Dusk to Dawn")

    options.ninja_tool_warning_limit = 5	

	send_command('lua l gearinfo')
	send_command('gs enable all')
	send_command('bind !` gs c cycle treasuremode')
	send_command('bind !q ja Innin')
	send_command('bind !a ja Yonin')
	send_command('bind f2 ws BladeShun')
	send_command('bind f3 ws BladeTen')
	send_command('bind f4 ws BladeKamu')
	send_command('bind f5 ws BladeHi')
	send_command('bind f6 ws BladeKu')
	send_command('bind f7 ws Evisceration')
	send_command('bind home gs c demring')
	send_command('bind ` input /tulfaire')
	
--	send_command('bind !` gs c toggle MagicBurst')
--	send_command('bind @c gs c toggle CP')

    if player.sub_job == 'WAR' then
        send_command('bind ^numpad/ input /ja "Berserk" <me>')
        send_command('bind !numpad/ input /ja "Defender" <me>')
        send_command('bind ^numpad* input /ja "Warcry" <me>')
        send_command('bind ^numpad- input /ja "Aggressor" <me>')
    end

    state.warned = M(false)
    select_movement_feet()
    select_default_macro_book()
    set_lockstyle()
    Haste = 0
    DW_needed = 0
    DW = false
    moving = false
    update_combat_form()
    determine_haste_group()
end

function user_unload()
	send_command('unbind !`')
	send_command('unbind !q')
	send_command('unbind !a')
	send_command('unbind f2')
	send_command('unbind f3')
	send_command('unbind f4')
	send_command('unbind f5')
	send_command('unbind f6')
	send_command('unbind f7')
	send_command('unbind home')
	send_command('unbind `')
    send_command('lua u gearinfo')
end

function init_gear_sets()
	------------------------------------------------------------------------------------------------
	------------------------------------- Andartia's Cape ------------------------------------------
	------------------------------------------------------------------------------------------------

    Andartia									= {}
    Andartia.TP									= { name="Andartia's Mantle", augments={'DEX+20','Accuracy+20 Attack+20','Accuracy+10','"Store TP"+10','Phys. dmg. taken-10%',}}
    Andartia.DEX								= { name="Andartia's Mantle", augments={'DEX+20','Accuracy+20 Attack+20','DEX+10','Weapon skill damage +10%',}}
    Andartia.STR								= { name="Andartia's Mantle", augments={'STR+20','Accuracy+20 Attack+20','STR+10','Weapon skill damage +10%',}}
	Andartia.AGI								= { name="Andartia's Mantle", augments={'AGI+20','Accuracy+20 Attack+20','AGI+10','Weapon skill damage +10%',}}
	Andartia.FC									= { name="Andartia's Mantle", augments={'HP+60','Eva.+20 /Mag. Eva.+20','"Fast Cast"+10','Spell interruption rate down-10%',}}
	Andartia.Magic								= { name="Andartia's Mantle", augments={'INT+20','Mag. Acc+20 /Mag. Dmg.+20','Mag. Acc.+10','"Mag.Atk.Bns."+10',}}

	------------------------------------------------------------------------------------------------
	------------------------------------ Job Abilities Sets ----------------------------------------
	------------------------------------------------------------------------------------------------

    sets.Enmity									= {
													ammo		="Date Shuriken",
													head		="Genmei Kabuto",
													body		="Emet Harness +1",
													hands		="Kurys Gloves",
													legs		="Zoar Subligar +1",
													feet		="Mochi. Kyahan +3",
													neck		="Unmoving Collar",
													waist		="Kasiri Belt",
													left_ear	="Cryptic Earring",
													right_ear	="Trux Earring",
													left_ring	="Supershear Ring",
													right_ring	="Defending Ring",
													back		="Reiki Cloak",}
    sets.precast.JA['Provoke']					= sets.Enmity
	sets.precast.JA['Yonin']					= set_combine(sets.Enmity, {head="Mochi. Hatsuburi +3",})
	sets.precast.JA['Innin']					= set_combine(sets.Enmity, {head="Mochi. Hatsuburi +3",})
	sets.precast.JA['Mijin Gakure']				= {main="Nagi",legs="Mochi. Hakama +3"}
    sets.precast.JA['Futae']					= {hands="Hattori Tekko +1"}
--	sets.precast.JA['Sange']					= {body="Mochi. Chainmail +1"}
    sets.precast.Waltz							= {}
    sets.precast.Waltz['Healing Waltz']			= {}
	
	------------------------------------------------------------------------------------------------
	---------------------------------------- Precast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.precast.FC								= {
													ammo		="Sapience Orb",
													head		=HerculeanHead.FC,
													body		="Taeon Tabard",
													hands		="Leyline Gloves",
													legs		=HerculeanLegs.FC,
													feet		=HerculeanFeet.FC,
													neck		="Baetyl Pendant",
													waist		="Kasiri Belt",
													left_ear	="Loquac. Earring",
													right_ear	="Etiolation Earring",
													left_ring	="Kishar Ring",
													right_ring	="Weather. Ring",
													back		=Andartia.FC}
    sets.precast.FC.Utsusemi					= set_combine(sets.precast.FC, {
													body		="Passion Jacket",
													feet		="Hattori Kyahan +1",
													neck		="Magoraga Beads",})
    sets.precast.RA								= {}
	------------------------------------------------------------------------------------------------
	------------------------------------ Weaponskill Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
    sets.precast.WS								= {
													ammo		="C. Palug Stone",
													head		="Ken. Jinpachi +1",
													body		="Ken. Samue +1",
													hands		="Ken. Tekko +1",
													legs		="Jokushu Haidate",
													feet		="Ken. Sune-Ate +1",
													neck		="Fotia Gorget",
													waist		="Fotia Belt",
													left_ear	="Lugra Earring +1",
													right_ear	="Moonshade Earring",
													left_ring	="Gere Ring",
													right_ring	="Ilabrat Ring",
													back		=Andartia.DEX}
    sets.precast.WS.Acc							= set_combine(sets.precast.WS, {})
	sets.ElementalWS							= {
													ammo		="Pemphredo Tathlum",
													head		="Mochizuki Hatsuburi +3",
													body		=HerculeanBody.MAB,
													hands		="Leyline Gloves",
													legs		="Mochi. Hakama +3",
													feet		=HerculeanFeet.MAB,
													neck		="Baetyl Pendant",
													waist		="Eschan Stone",
													left_ear	="Moonshade Earring",
													right_ear	="Friomisi Earring",
													left_ring	="Dingir Ring",
													right_ring	="Fenrir Ring +1",
													back		=Andartia.STR}
	-- Katana
    sets.precast.WS['Blade: Shun']				= sets.precast.WS
    sets.precast.WS['Blade: Shun'].Acc			= set_combine(sets.precast.WS, {})
    sets.precast.WS['Blade: Metsu']				= set_combine(sets.precast.WS, {
													legs		="Zoar Subligar +1",
													neck		="Ninja Nodowa +2",
													waist		="Grunfeld Rope",
													right_ear	="Mache Earring +1"})
    sets.precast.WS['Blade: Hi']				= set_combine(sets.precast.WS, {
													ammo		="Yetshila +1",
													head		="Adhemar Bonnet +1",
													hands		="Ryuo Tekko +1",
													legs		="Mochi. Hakama +3",
													neck		="Ninja Nodowa +2",
													waist		="Windbuffet Belt +1",
													left_ear	="Brutal Earring",
													right_ear	="Odr Earring",
													right_ring	="Epona's Ring",
													back		=Andartia.AGI})
    sets.precast.WS['Blade: Hi'].Acc			= set_combine(sets.Hi, {})
	sets.precast.WS['Blade: Jin']				= sets.precast.WS
	sets.precast.WS['Blade: Rin']				= sets.Hi
    sets.precast.WS['Blade: Ten']				= set_combine(sets.precast.WS, {
													ammo		="Seething Bomblet +1",
													head		="Hachiya Hatsu. +3",
													body		=HerculeanBody.WS,
													hands		=HerculeanHands.WS,
													legs		="Mochi. Hakama +3",
													feet		=HerculeanFeet.WS,
													waist		="Sailfi Belt +1",
													left_ear	="Moonshade Earring",
													right_ear	="Ishvara Earring",
													right_ring	="Regal Ring",
													back		=Andartia.STR})
	sets.precast.WS['Blade: Retsu']				= sets.precast.WS
	sets.precast.WS['Blade: Kamu']				= set_combine(sets.precast.WS, {
													ammo		="Seething Bomblet +1",
													head		="Hachiya Hatsu. +3",
													body		=HerculeanBody.WS,
													hands		=HerculeanHands.WS,
													legs		="Mochi. Hakama +3",
													feet		=HerculeanFeet.WS,
													waist		="Sailfi Belt +1",
													left_ear	="Moonshade Earring",
													right_ear	="Ishvara Earring",
													right_ring	="Regal Ring",
													back		=Andartia.STR})
    sets.precast.WS['Blade: Ei']				= set_combine(sets.ElementalWS, {head="Pixie Hairpin +1",right_ring="Archon Ring"})		
	sets.precast.WS['Blade: Teki']				= sets.ElementalWS
    sets.precast.WS['Blade: To']				= sets.ElementalWS
    sets.precast.WS['Blade: Yu']				= sets.ElementalWS
    sets.precast.WS['Blade: Chi']				= set_combine(sets.ElementalWS, {legs="Mochi. Hakama +3",})
	
	-- Great Katana
	sets.precast.WS['Tachi: Gekko']				= set_combine(sets.precast.WS, {
													ammo		="Seething Bomblet +1",
													head		="Hachiya Hatsu. +3",
													body		=HerculeanBody.WS,
													hands		=HerculeanHands.WS,
													legs		="Mochi. Hakama +3",
													feet		=HerculeanFeet.WS,
													waist		="Sailfi Belt +1",
													left_ear	="Moonshade Earring",
													right_ear	="Ishvara Earring",
													right_ring	="Regal Ring",
													back		=Andartia.STR})
	sets.precast.WS['Tachi: Kasha']				= set_combine(sets.precast.WS, {
													ammo		="Seething Bomblet +1",
													head		="Hachiya Hatsu. +3",
													body		=HerculeanBody.WS,
													hands		=HerculeanHands.WS,
													legs		="Mochi. Hakama +3",
													feet		=HerculeanFeet.WS,
													waist		="Sailfi Belt +1",
													left_ear	="Moonshade Earring",
													right_ear	="Ishvara Earring",
													right_ring	="Regal Ring",
													back		=Andartia.STR})
    sets.precast.WS['Tachi: Ageha']				= set_combine(sets.precast.WS, {
													ammo		="Yamarang",
													head		="Hachiya Hatsu. +3",
													body		="Mummu Jacket +2",
													hands		="Mummu Wrists +2",
													legs		="Mochi. Hakama +3",
													feet		="Mummu Gamash. +2",
													left_ear	="Ishvara Earring",
													left_ring	="Mummu Ring",
													right_ring	="Metamor. Ring +1",
													back		=Andartia.STR})

	-- Hand-to-Hand
	sets.precast.WS['Combo']					= set_combine(sets.precast.WS, {
													ammo		="Seeth. Bomblet +1",
													hands		="Ryuo Tekko +1",
													legs		="Ryuo Hakama +1",
													feet		="Ryuo Sune-Ate +1",
													waist		="Sailfi Belt +1",
													back		=Andartia.STR})
	sets.precast.WS['Shoulder Tackle']			= set_combine(sets.precast.WS, {
													ammo		="Yamarang",
													head		="Hachiya Hatsu. +3",
													body		="Mummu Jacket +2",
													hands		="Mummu Wrists +2",
													legs		="Mochi. Hakama +3",
													feet		="Mummu Gamash. +2",
													left_ear	="Ishvara Earring",
													left_ring	="Mummu Ring",
													right_ring	="Metamor. Ring +1",
													back		=Andartia.STR})
	sets.precast.WS['Backhand Blow']			= set_combine(sets.precast.WS, {
													ammo		="Yetshila +1",
													head		="Adhemar Bonnet +1",
													hands		="Ryuo Tekko +1",
													legs		="Mochi. Hakama +3",
													neck		="Ninja Nodowa +2",
													waist		="Windbuffet Belt +1",
													left_ear	="Brutal Earring",
													right_ear	="Odr Earring",
													right_ring	="Epona's Ring",
													back		=Andartia.DEX})
	sets.precast.WS['Spinning Attack']			= set_combine(sets.precast.WS, {
													ammo		="Seeth. Bomblet +1",
													hands		="Ryuo Tekko +1",
													legs		="Ryuo Hakama +1",
													feet		="Ryuo Sune-Ate +1",
													waist		="Sailfi Belt +1",
													back		=Andartia.STR})
	sets.precast.WS['Asuran Fists']				= set_combine(sets.precast.WS, {
													ammo		="Seeth. Bomblet +1",
													hands		="Ryuo Tekko +1",
													legs		="Ryuo Hakama +1",
													feet		="Ryuo Sune-Ate +1",
													waist		="Sailfi Belt +1",
													back		=Andartia.STR})
													
	-- Dagger
    sets.precast.WS['Evisceration']				= set_combine(sets.precast.WS, {
													ammo		="Yetshila +1",
													head		="Adhemar Bonnet +1",
													hands		="Ryuo Tekko +1",
													legs		="Ken. Hakama +1",
													left_ear	="Brutal Earring",
													right_ear	="Odr Earring",
													right_ring	="Epona's Ring",
													back		=Andartia.DEX})
    sets.precast.WS['Aeolian Edge']				= sets.ElementalWS

	-- Sword
    sets.precast.WS['Red Lotus Blade']			= sets.ElementalWS
    sets.precast.WS['Seraph Blade']				= set_combine(sets.ElementalWS, {right_ring="Weather. Ring"})
    sets.precast.WS['Circle Blade']				= set_combine(sets.precast.WS, {
													ammo		="Seeth. Bomblet +1",
													hands		="Ryuo Tekko +1",
													legs		="Ryuo Hakama +1",
													feet		="Ryuo Sune-Ate +1",
													waist		="Sailfi Belt +1",
													back		=Andartia.STR})
    sets.precast.WS['Vorpal Blade']				= set_combine(sets.precast.WS, {
													ammo		="Yetshila +1",
													head		="Adhemar Bonnet +1",
													hands		="Ryuo Tekko +1",
													legs		="Ken. Hakama +1",
													left_ear	="Brutal Earring",
													right_ear	="Odr Earring",
													right_ring	="Epona's Ring",
													back		=Andartia.STR})
    sets.precast.WS['Savage Blade']				= set_combine(sets.precast.WS, {
													ammo		="Seething Bomblet +1",
													head		="Hachiya Hatsu. +3",
													body		=HerculeanBody.WS,
													hands		=HerculeanHands.WS,
													legs		="Mochi. Hakama +3",
													feet		=HerculeanFeet.WS,
													waist		="Sailfi Belt +1",
													left_ear	="Moonshade Earring",
													right_ear	="Ishvara Earring",
													right_ring	="Regal Ring",
													back		=Andartia.STR})
    sets.precast.WS['Sanguine Blade']			= set_combine(sets.ElementalWS, {head="Pixie Hairpin +1",right_ring="Archon Ring"})
		
	------------------------------------------------------------------------------------------------
	-------------------------------------- Utility Sets --------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.LugraLeft								= {left_ear="Lugra Earring +1"}
	sets.LugraRight								= {right_ear="Lugra Earring +1"}
    sets.WSDayBonus								= {head="Gavialis Helm"}

	------------------------------------------------------------------------------------------------
	---------------------------------------- Midcast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.midcast.FastRecast						= sets.precast.FC
    sets.midcast.SpellInterrupt					= {
													ammo		="Staunch Tathlum",
													head		="Malignance Chapeau",
													body		="Malignance Tabard",
													hands		="Rawhide Gloves",
													legs		="Wukong's Haka. +1",
													feet		="Malignance Boots",
													neck		="Willpower Torque",
													waist		="Audumbla Sash",
													left_ear	="Loquac. Earring",
													right_ear	="Etiolation Earring",
													left_ring	="Evanescence Ring",
													right_ring	="Weather. Ring",
													back		=Andartia.FC}
    sets.midcast.Utsusemi						= set_combine(sets.midcast.SpellInterrupt, {feet="Hattori Kyahan +1"})
    sets.midcast.ElementalNinjutsu				= {
													ammo		="Pemphredo Tathlum",
													head		="Mochi. Hatsuburi +3",
													body		="Samnuha Coat",
													hands		={ name="Herculean Gloves", augments={'Mag. Acc.+16 "Mag.Atk.Bns."+16','Magic burst dmg.+6%','MND+10','Mag. Acc.+9','"Mag.Atk.Bns."+13',}},
													legs		={ name="Herculean Trousers", augments={'Mag. Acc.+16 "Mag.Atk.Bns."+16','Magic burst dmg.+8%','"Mag.Atk.Bns."+14',}},
													feet		="Hachiya Kyahan +3",
													neck		="Baetyl Pendant",
													waist		="Eschan Stone",
													left_ear	="Friomisi Earring",
													right_ear	="Crematio Earring",
													left_ring	="Dingir Ring",
													right_ring	="Shiva Ring +1",
													back		=Andartia.Magic}
    sets.midcast.ElementalNinjutsu.Resistant	= set_combine(sets.midcast.Ninjutsu, {})
    sets.midcast.EnfeeblingNinjutsu				= {
													ammo		="Yamarang",
													head		="Hachiya Hatsu. +3",
													body		="Malignance Tabard",
													hands		="Malignance Gloves",
													legs		="Malignance Tights",
													feet		="Mochi. Kyahan +3",
													neck		="Incanter's Torque",
													waist		="Cimmerian Sash",
													left_ear	="Stealth Earring",
													right_ear	="Hnoss Earring",
													left_ring	="Stikini Ring",
													right_ring	="Metamor. Ring +1",
													back		=Andartia.Magic}
    sets.midcast.EnhancingNinjutsu				= sets.midcast.EnfeeblingNinjutsu
    sets.midcast.RA								= {}

	------------------------------------------------------------------------------------------------
    ------------------------------- Idle/resting/defense/etc sets ----------------------------------
	------------------------------------------------------------------------------------------------

    sets.idle									 = {
													ammo		="Staunch Tathlum",
													head		="Rao Kabuto +1",
													body		="Hiza. Haramaki +2",
													hands		="Rao Kote +1",
													legs		="Rao Haidate +1",
													feet		="Rao Sune-Ate +1",
													neck		="Bathy Choker +1",
													waist		="Flume Belt +1",
													left_ear	="Infused Earring",
													right_ear	="Eabani Earring",
													left_ring	="Sheltered Ring",
													right_ring	="Paguroidea Ring",
													back		="Reiki Cloak"}
    sets.idle.DT								= set_combine(sets.idle, {})
    sets.idle.Town								= set_combine(sets.idle, {})
    sets.idle.Weak								= sets.idle.DT
    sets.defense.PDT							= {
													ammo		="Seki Shuriken",
													head		="Malignance Chapeau",
													body		="Malignance Tabard",
													hands		="Malignance Gloves",
													legs		="Malignance Tights",
													feet		="Amm Greaves",
													neck		="Ninja Nodowa +2",
													waist		="Kentarch Belt +1",
													left_ear	="Genmei Earring",
													right_ear	="Telos Earring",
													left_ring	="Gelatinous Ring +1",
													right_ring	="Defending Ring",
													back		="Shadow Mantle",}
    sets.defense.MDT							= set_combine(sets.defense.PDT, {
													feet		="Malignance Boots",
													neck		="Warder's Charm +1",
													left_ear	="Odnowa Earring +1",
													left_ring	="Shadow Ring",
													back		="Reiki Cloak",})
    sets.Kiting									= {feet="Danzo sune-ate"}
    sets.DayMovement							= {feet="Danzo sune-ate"}
    sets.NightMovement							= {feet="Hachiya Kyahan +3"}

	------------------------------------------------------------------------------------------------
	---------------------------------------- Engaged Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    -- Variations for TP weapon and (optional) offense/defense modes.  Code will fall back on previous
    -- sets if more refined versions aren't defined.
    -- If you create a set with both offense and defense modes, the offense mode should be first.
    -- EG: sets.engaged.Dagger.Accuracy.Evasion
    -- * NIN Native DW Trait: 35% DW

    -- No Magic Haste (74% DW to cap) --
    sets.engaged								= {
													ammo		="Seki Shuriken",
													head		="Ryuo Somen",
													body		="Mochi. Chainmail +3",
													hands		="Floral Gauntlets",
													legs		="Hachiya Hakama +3",
													feet		=HerculeanFeet.TA,
													neck		="Ninja Nodowa +2",
													waist		="Reiki Yotai",
													left_ear	="Dedition Earring",
													right_ear	="Eabani Earring",
													left_ring	="Gere Ring",
													right_ring	="Epona's Ring",
													back		=Andartia.TP}
    sets.engaged.LowAcc							= set_combine(sets.engaged, {feet="Kendatsuba Sune-Ate +1"})
    sets.engaged.MidAcc							= set_combine(sets.engaged.LowAcc, {})
    sets.engaged.HighAcc						= set_combine(sets.engaged.MidAcc, {})
    sets.engaged.STP							= {
													ammo		="Seki Shuriken",
													head		="Malignance Chapeau",
													body		="Malignance Tabard",
													hands		="Malignance Gloves",
													legs		="Ryuo Hakama +1",
													feet		="Ryuo Sune-Ate +1",
													neck		="Ninja Nodowa +2",
													waist		="Windbuffet Belt +1",
													left_ear	="Dedition Earring",
													right_ear	="Cessance Earring",
													left_ring	="Gere Ring",
													right_ring	="Epona's Ring",
													back		=Andartia.TP}
    -- 15% Magic Haste (67% DW to cap) --
    sets.engaged.LowHaste						= set_combine(sets.engaged, {hands="Adhemar Wristbands +1"})
    sets.engaged.LowAcc.LowHaste				= set_combine(sets.engaged.LowHaste, {})
    sets.engaged.MidAcc.LowHaste				= set_combine(sets.engaged.LowAcc.LowHaste, {})
    sets.engaged.HighAcc.LowHaste				= set_combine(sets.engaged.LowAcc.LowHaste, {})
    sets.engaged.STP.LowHaste					= sets.engaged.STP

    -- 30% Magic Haste (56% DW to cap) --
    sets.engaged.MidHaste						= set_combine(sets.engaged.LowHaste, {waist="Windbuffet Belt +1",right_ear="Telos Earring"})
    sets.engaged.LowAcc.MidHaste				= set_combine(sets.engaged.MidHaste, {})
    sets.engaged.MidAcc.MidHaste				= set_combine(sets.engaged.LowAcc.MidHaste, {})
    sets.engaged.HighAcc.MidHaste				= set_combine(sets.engaged.MidHaste.MidAcc, {})
    sets.engaged.STP.MidHaste					= sets.engaged.STP

    -- 35% Magic Haste (51% DW to cap) --
    sets.engaged.HighHaste						= set_combine(sets.engaged.MidHaste, {head="Adhemar Bonnet +1"})
    sets.engaged.LowAcc.HighHaste				= set_combine(sets.engaged.HighHaste, {})
    sets.engaged.MidAcc.HighHaste				= set_combine(sets.engaged.LowAcc.HighHaste, {})
    sets.engaged.HighAcc.HighHaste				= set_combine(sets.engaged.MidAcc.HighHaste, {})
    sets.engaged.STP.HighHaste					= sets.engaged.STP

    -- 45% Magic Haste (36% DW to cap) --
    sets.engaged.MaxHaste						= set_combine(sets.engaged.HighHaste, {
													ammo		="Happo Shuriken +1",
													body		="Kendatsuba Samue +1",
													legs		="Samnuha Tights"})
    sets.engaged.LowAcc.MaxHaste				= set_combine(sets.engaged.MaxHaste, {
													ammo		="Happo Shuriken +1",
													head		="Kendatsuba Jinpachi +1",
													legs		="Kendatsuba Hakama +1",})
    sets.engaged.MidAcc.MaxHaste				= set_combine(sets.engaged.LowAcc.MaxHaste, {})
    sets.engaged.HighAcc.MaxHaste				= set_combine(sets.engaged.MidAcc.MaxHaste, {})
    sets.engaged.STP.MaxHaste					= sets.engaged.STP

    sets.engaged.Hybrid							= {}
    sets.engaged.DT								= set_combine(sets.engaged, sets.engaged.Hybrid)
    sets.engaged.LowAcc.DT						= set_combine(sets.engaged.LowAcc, sets.engaged.Hybrid)
    sets.engaged.MidAcc.DT						= set_combine(sets.engaged.MidAcc, sets.engaged.Hybrid)
    sets.engaged.HighAcc.DT						= set_combine(sets.engaged.HighAcc, sets.engaged.Hybrid)
    sets.engaged.STP.DT							= set_combine(sets.engaged.STP, sets.engaged.Hybrid)

    sets.engaged.DT.LowHaste					= set_combine(sets.engaged.LowHaste, sets.engaged.Hybrid)
    sets.engaged.LowAcc.DT.LowHaste				= set_combine(sets.engaged.LowAcc.LowHaste, sets.engaged.Hybrid)
    sets.engaged.MidAcc.DT.LowHaste				= set_combine(sets.engaged.MidAcc.LowHaste, sets.engaged.Hybrid)
    sets.engaged.HighAcc.DT.LowHaste			= set_combine(sets.engaged.HighAcc.LowHaste, sets.engaged.Hybrid)
    sets.engaged.STP.DT.LowHaste				= set_combine(sets.engaged.STP.LowHaste, sets.engaged.Hybrid)

    sets.engaged.DT.MidHaste					= set_combine(sets.engaged.MidHaste, sets.engaged.Hybrid)
    sets.engaged.LowAcc.DT.MidHaste				= set_combine(sets.engaged.LowAcc.MidHaste, sets.engaged.Hybrid)
    sets.engaged.MidAcc.DT.MidHaste				= set_combine(sets.engaged.MidAcc.MidHaste, sets.engaged.Hybrid)
    sets.engaged.HighAcc.DT.MidHaste			= set_combine(sets.engaged.HighAcc.MidHaste, sets.engaged.Hybrid)
    sets.engaged.STP.DT.MidHaste				= set_combine(sets.engaged.STP.MidHaste, sets.engaged.Hybrid)

    sets.engaged.DT.HighHaste					= set_combine(sets.engaged.HighHaste, sets.engaged.Hybrid)
    sets.engaged.LowAcc.DT.HighHaste			= set_combine(sets.engaged.LowAcc.HighHaste, sets.engaged.Hybrid)
    sets.engaged.MidAcc.DT.HighHaste			= set_combine(sets.engaged.MidAcc.HighHaste, sets.engaged.Hybrid)
    sets.engaged.HighAcc.DT.HighHaste			= set_combine(sets.engaged.HighAcc.HighHaste, sets.engaged.Hybrid)
    sets.engaged.STP.DT.HighHaste				= set_combine(sets.engaged.HighHaste.STP, sets.engaged.Hybrid)

    sets.engaged.DT.MaxHaste					= set_combine(sets.engaged.MaxHaste, sets.engaged.Hybrid)
    sets.engaged.LowAcc.DT.MaxHaste				= set_combine(sets.engaged.LowAcc.MaxHaste, sets.engaged.Hybrid)
    sets.engaged.MidAcc.DT.MaxHaste				= set_combine(sets.engaged.MidAcc.MaxHaste, sets.engaged.Hybrid)
    sets.engaged.HighAcc.DT.MaxHaste			= set_combine(sets.engaged.HighAcc.MaxHaste, sets.engaged.Hybrid)
    sets.engaged.STP.DT.MaxHaste				= set_combine(sets.engaged.STP.MaxHaste, sets.engaged.Hybrid)

	------------------------------------------------------------------------------------------------
	-------------------------------------- Custom Buff Sets ----------------------------------------
	------------------------------------------------------------------------------------------------

    sets.magic_burst							= set_combine(sets.midcast.ElementalNinjutsu, {
													right_ear	="Static Earring",
													left_ring	="Locus Ring",
													right_ring	="Mujin Band",})
--	sets.buff.Migawari							= {body="Iga Ningi +2"}
    sets.buff.Doom								= set_combine(sets.engaged.STP, {
													neck		="Nicander's Necklace",
													waist		="Gishdubar Sash",
													left_ring	={name="Saida Ring", bag="wardrobe2"},
													right_ring	={name="Saida Ring", bag="wardrobe4"}})
	sets.buff.Yonin								= {}
	sets.buff.Innin								= {}
	sets.Obi									= {waist="Hachirin-no-obi"}
    sets.CP										= {back="Mecisto. Mantle"}
    sets.TreasureHunter							= set_combine(sets.engaged.STP, {
													head		="Volte Cap",
													legs		="Volte Hose",
													waist		="Chaac Belt"})
--	sets.Reive									= {neck="Ygnas's Resolve +1"}
end

function job_precast(spell, action, spellMap, eventArgs)
    if spell.skill == "Ninjutsu" then
        do_ninja_tool_checks(spell, spellMap, eventArgs)
    end
    if spellMap == 'Utsusemi' then
        if buffactive['Copy Image (3)'] or buffactive['Copy Image (4+)'] then
            cancel_spell()
            add_to_chat(123, '**!! '..spell.english..' Canceled: [3+ IMAGES] !!**')
            eventArgs.handled = true
            return
        elseif buffactive['Copy Image'] or buffactive['Copy Image (2)'] then
            send_command('cancel 66; cancel 444; cancel Copy Image; cancel Copy Image (2)')
        end
    end
end

function job_post_precast(spell, action, spellMap, eventArgs)
    if spell.type == 'WeaponSkill' then
        if lugra_ws:contains(spell.english) and state.Night.value == true then
                equip(sets.LugraLeft)
            if spell.english == 'Blade: Hi' then
                equip(sets.LugraLeft)
            end
        end
        if spell.english == 'Blade: Yu' and (world.weather_element == 'Water' or world.day_element == 'Water') then
            equip(sets.Obi)
        end
    end
end

function job_post_midcast(spell, action, spellMap, eventArgs)
    if default_spell_map == 'ElementalNinjutsu' then
        if state.MagicBurst.value then
            equip(sets.magic_burst)
        end
        if (spell.element == world.day_element or spell.element == world.weather_element) then
            equip(sets.Obi)
        end
        if state.Buff.Futae then
            equip(sets.precast.JA['Futae'])
            add_to_chat(120, 'Futae GO!')
        end
    end
    if spell.type == 'WeaponSkill' then
        if state.Buff.Futae then
            add_to_chat(120, 'Futae GO!')
        end
    end
    if state.Buff.Doom then
        equip(sets.buff.Doom)
    end
end

function job_aftercast(spell, action, spellMap, eventArgs)
    if not spell.interrupted and spell.english == "Migawari: Ichi" then
        state.Buff.Migawari = true
    end
end

function job_buff_change(buff, gain)
--    if buffactive['Reive Mark'] then
--        if gain then
--            equip(sets.Reive)
--            disable('neck')
--        else
--            enable('neck')
--        end
--    end

    if buff == "doom" then
        if gain then
            equip(sets.buff.Doom)
            send_command('@input /p Doomed.')
             disable('neck','left_ring','right_ring','waist')
        else
            enable('neck','left_ring','right_ring','waist')
            handle_equipping_gear(player.status)
        end
    end

end

function job_status_change(new_status, old_status)
    if new_status == 'Idle' then
        select_movement_feet()
    end
end

function job_handle_equipping_gear(playerStatus, eventArgs)
    update_combat_form()
    determine_haste_group()
end

function job_update(cmdParams, eventArgs)
    handle_equipping_gear(player.status)
    th_update(cmdParams, eventArgs)
end

function update_combat_form()
    if DW == true then
        state.CombatForm:set('DW')
    elseif DW == false then
        state.CombatForm:reset()
    end
end

function customize_idle_set(idleSet)
    if state.Buff.Migawari then
       idleSet = set_combine(idleSet, sets.buff.Migawari)
    end
    if state.CP.current == 'on' then
        equip(sets.CP)
        disable('back')
    else
        enable('back')
    end

    idleSet = set_combine(idleSet, select_movement_feet())

    return idleSet
end

function customize_melee_set(meleeSet)
    if state.Buff.Migawari then
        meleeSet = set_combine(meleeSet, sets.buff.Migawari)
    end
    if state.TreasureMode.value == 'Fulltime' then
        meleeSet = set_combine(meleeSet, sets.TreasureHunter)
    end

    return meleeSet
end

function display_current_job_state(eventArgs)

    local cf_msg = ''
    if state.CombatForm.has_value then
        cf_msg = ' (' ..state.CombatForm.value.. ')'
    end

    local m_msg = state.OffenseMode.value
    if state.HybridMode.value ~= 'Normal' then
        m_msg = m_msg .. '/' ..state.HybridMode.value
    end

    local ws_msg = state.WeaponskillMode.value

    local c_msg = state.CastingMode.value

    local d_msg = 'None'
    if state.DefenseMode.value ~= 'None' then
        d_msg = state.DefenseMode.value .. state[state.DefenseMode.value .. 'DefenseMode'].value
    end

    local i_msg = state.IdleMode.value

    local msg = ''
    if state.TreasureMode.value == 'Tag' then
        msg = msg .. ' TH: Tag |'
    end
    if state.MagicBurst.value then
        msg = ' Burst: On |'
    end
    if state.Kiting.value then
        msg = msg .. ' Kiting: On |'
    end

    add_to_chat(002, '| ' ..string.char(31,210).. 'Melee' ..cf_msg.. ': ' ..string.char(31,001)..m_msg.. string.char(31,002)..  ' |'
        ..string.char(31,207).. ' WS: ' ..string.char(31,001)..ws_msg.. string.char(31,002)..  ' |'
        ..string.char(31,060).. ' Magic: ' ..string.char(31,001)..c_msg.. string.char(31,002)..  ' |'
        ..string.char(31,004).. ' Defense: ' ..string.char(31,001)..d_msg.. string.char(31,002)..  ' |'
        ..string.char(31,008).. ' Idle: ' ..string.char(31,001)..i_msg.. string.char(31,002)..  ' |'
        ..string.char(31,002)..msg)

    eventArgs.handled = true
end

function determine_haste_group()
    classes.CustomMeleeGroups:clear()
    if DW == true then
        if DW_needed <= 1 then
            classes.CustomMeleeGroups:append('MaxHaste')
        elseif DW_needed > 1 and DW_needed <= 16 then
            classes.CustomMeleeGroups:append('HighHaste')
        elseif DW_needed > 16 and DW_needed <= 21 then
            classes.CustomMeleeGroups:append('MidHaste')
        elseif DW_needed > 21 and DW_needed <= 34 then
            classes.CustomMeleeGroups:append('LowHaste')
        elseif DW_needed > 34 then
            classes.CustomMeleeGroups:append('')
        end
    end
end

function job_self_command(cmdParams, eventArgs)
    gearinfo(cmdParams, eventArgs)
end

function gearinfo(cmdParams, eventArgs)
    if cmdParams[1] == 'gearinfo' then
        if type(tonumber(cmdParams[2])) == 'number' then
            if tonumber(cmdParams[2]) ~= DW_needed then
            DW_needed = tonumber(cmdParams[2])
            DW = true
            end
        elseif type(cmdParams[2]) == 'string' then
            if cmdParams[2] == 'false' then
                DW_needed = 0
                DW = false
            end
        end
        if type(tonumber(cmdParams[3])) == 'number' then
            if tonumber(cmdParams[3]) ~= Haste then
                Haste = tonumber(cmdParams[3])
            end
        end
        if type(cmdParams[4]) == 'string' then
            if cmdParams[4] == 'true' then
                moving = true
            elseif cmdParams[4] == 'false' then
                moving = false
            end
        end
        if not midaction() then
            job_update()
        end
    end
end

function select_movement_feet()
    if world.time >= (17*60) or world.time <= (7*60) then
        state.Night:set()
        return sets.NightMovement
    else
        state.Night:reset()
        return sets.DayMovement
    end
end

function do_ninja_tool_checks(spell, spellMap, eventArgs)
    local ninja_tool_name
    local ninja_tool_min_count = 1

    -- Only checks for universal tools and shihei
    if spell.skill == "Ninjutsu" then
        if spellMap == 'Utsusemi' then
            ninja_tool_name = "Shihei"
        elseif spellMap == 'ElementalNinjutsu' then
            ninja_tool_name = "Inoshishinofuda"
        elseif spellMap == 'EnfeeblingNinjutsu' then
            ninja_tool_name = "Chonofuda"
        elseif spellMap == 'EnhancingNinjutsu' then
            ninja_tool_name = "Shikanofuda"
        else
            return
        end
    end

    local available_ninja_tools = player.inventory[ninja_tool_name] or player.wardrobe[ninja_tool_name]

    -- If no tools are available, end.
    if not available_ninja_tools then
        if spell.skill == "Ninjutsu" then
            return
        end
    end

    -- Low ninja tools warning.
    if spell.skill == "Ninjutsu" and state.warned.value == false
        and available_ninja_tools.count > 1 and available_ninja_tools.count <= options.ninja_tool_warning_limit then
        local msg = '*****  LOW TOOLS WARNING: '..ninja_tool_name..' *****'
        --local border = string.repeat("*", #msg)
        local border = ""
        for i = 1, #msg do
            border = border .. "*"
        end

        add_to_chat(104, border)
        add_to_chat(104, msg)
        add_to_chat(104, border)

        state.warned:set()
    elseif available_ninja_tools.count > options.ninja_tool_warning_limit and state.warned then
        state.warned:reset()
    end
end

-- Check for various actions that we've specified in user code as being used with TH gear.
-- This will only ever be called if TreasureMode is not 'None'.
-- Category and Param are as specified in the action event packet.
function th_action_check(category, param)
    if category == 2 or -- any ranged attack
        --category == 4 or -- any magic action
        (category == 3 and param == 30) or -- Aeolian Edge
        (category == 6 and info.default_ja_ids:contains(param)) or -- Provoke, Animated Flourish
        (category == 14 and info.default_u_ja_ids:contains(param)) -- Quick/Box/Stutter Step, Desperate/Violent Flourish
        then return true
    end
end

windower.register_event('zone change', 
    function()
        send_command('gi ugs true')
    end
)

function select_default_macro_book()

    if player.sub_job == 'DNC' then
        set_macro_page(2, 2)
    elseif player.sub_job == 'THF' then
        set_macro_page(1, 2)
    else
        set_macro_page(1, 2)
    end
end

function set_lockstyle()
    send_command('wait 2; input /lockstyleset ' .. lockstyleset)
end
