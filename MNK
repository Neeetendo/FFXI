function get_sets()
    mote_include_version = 2
    include('Mote-Include.lua')
end

function job_setup()
	send_command('gs enable all')
    include('Mote-TreasureHunter')
    state.Buff.Footwork = buffactive.Footwork or false
    state.Buff.Impetus = buffactive.Impetus or false
    state.FootworkWS = M(false, 'Footwork on WS')
	
    info.impetus_hit_count = 0
    windower.raw_register_event('action', on_action_for_impetus)
    info.default_ja_ids = S{35, 204}
    info.default_u_ja_ids = S{201, 202, 203, 205, 207}
end

function user_setup()
    state.OffenseMode:options('Normal', 'SomeAcc', 'Acc', 'Fodder')
    state.WeaponskillMode:options('Normal', 'SomeAcc', 'Acc', 'Fodder')
    state.HybridMode:options('Normal', 'PDT', 'Counter')
    state.PhysicalDefenseMode:options('PDT', 'HP')
	
	send_command('bind !` gs c cycle treasuremode')
	send_command('bind !q ja Boost')
	send_command('bind f2 ws RagingFists')
	send_command('bind f3 ws VictorySmite')
	send_command('bind f4 ws ShijinSpiral')
	send_command('bind f5 ws HowlingFist')
	send_command('bind f6 ws TornadoKick')
	send_command('bind f7 ws AsuranFists')

    update_combat_form()
    update_melee_groups()
	select_default_macro_book()
end

function file_unload()
	send_command('unbind !`')
	send_command('unbind f1')
	send_command('unbind f2')
	send_command('unbind f3')
	send_command('unbind f4')
	send_command('unbind f5')
	send_command('unbind f6')
	send_command('unbind f7')
	send_command('unbind f8')
	send_command('unbind home')
	send_command('unbind `')
end

function init_gear_sets()
	------------------------------------------------------------------------------------------------
	-------------------------------------- Segomo's Cape -------------------------------------------
	------------------------------------------------------------------------------------------------
	
	Segomo										= {}
	Segomo.STP									= { name="Segomo's Mantle", augments={'DEX+20','Accuracy+20 Attack+20','Accuracy+10','"Store TP"+10','Phys. dmg. taken-10%',}}
	Segomo.DASTR								= { name="Segomo's Mantle", augments={'STR+20','Accuracy+20 Attack+20','STR+10','"Dbl.Atk."+10',}}
	Segomo.DADEX								= { name="Segomo's Mantle", augments={'DEX+20','Accuracy+20 Attack+20','Accuracy+10','"Dbl.Atk."+10','Phys. dmg. taken-10%',}}
	Segomo.Crit									= { name="Segomo's Mantle", augments={'DEX+20','Accuracy+20 Attack+20','Crit.hit rate+10',}}
	Segomo.Magic								= { name="Segomo's Mantle", augments={'STR+20','Mag. Acc+20 /Mag. Dmg.+20','Weapon skill damage +10%',}}
	Segomo.Hybrid								= { name="Segomo's Mantle", augments={'HP+60','Eva.+20 /Mag. Eva.+20','"Store TP"+10','Magic dmg. taken-10%',}}
	
	------------------------------------------------------------------------------------------------
	------------------------------------ Job Abilities Sets ----------------------------------------
	------------------------------------------------------------------------------------------------
	
    sets.TreasureHunter							= {head="Volte Cap",legs="Volte Hose",waist="Chaac Belt"}
	sets.precast.JA['Hundred Fists']			= {legs="Hes. Hose +3"}
	sets.precast.JA['Boost']					= {hands="Anchorite's Gloves +2",waist="Ask Sash"}
	sets.precast.JA['Dodge']					= {feet="Anchorite's Gaiters +2"}
	sets.precast.JA['Focus']					= {head="Anchorite's Crown +2"}
	sets.precast.JA['Counterstance']			= {feet="Hes. Gaiters +3"}
	sets.precast.JA['Footwork']					= {feet="Shukuyu Sune-Ate"}
	sets.precast.JA['Formless Strikes']			= {body="Hes. Cyclas +3"}
	sets.precast.JA['Mantra']					= {feet="Hes. Gaiters +3"}
	sets.precast.JA['Chi Blast']				= {head="Hes. Crown +3"}
	sets.precast.JA['Chakra']					= {
													ammo		="Ginsen",
													head		="Genmei Kabuto",
													body		="Anch. Cyclas +3",
													hands		="Hesychast's Gloves +1",
													legs		="Samnuha Tights",
													feet		="Ken. Sune-Ate +1",
													neck		="Moonlight Nodowa",
													waist		="Moonbow Belt +1",
													left_ear	="Odnowa Earring +1",
													right_ear	="Genmei Earring",
													left_ring	="Niqmaddu Ring",
													right_ring	="Regal Ring",
													back		=Segomo.STP}
	sets.precast.Waltz							= sets.precast.JA['Chakra']
    sets.precast.Waltz['Healing Waltz']			= sets.precast.JA['Chakra']
    sets.precast.Step							= {}
    sets.precast.Flourish1						= {}

	------------------------------------------------------------------------------------------------
	---------------------------------------- Precast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
    
    sets.precast.FC								= {
													ammo		="Sapience Orb",
													head		=HerculeanHead.FC,
													body		="Taeon Tabard",
													hands		="Leyline Gloves",
													legs		=HerculeanLegs.FC,
													feet		=HerculeanFeet.FC,
													neck		="Baetyl Pendant",
													waist		="Kasiri Belt",
													left_ear	="Etiolation Earring",
													right_ear	="Loquac. Earring",
													left_ring	="Niqmaddu Ring",
													right_ring	="Weather. Ring",
													back		=Segomo.STP}
    sets.precast.FC.Utsusemi					= set_combine(sets.precast.FC, {})

	------------------------------------------------------------------------------------------------
	------------------------------------ Weaponskill Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
    sets.precast.WS								= {
													ammo		="Knobkierrie",
													head		="Adhemar Bonnet +1",
													body		="Adhemar Jacket +1",
													hands		="Adhemar Wrist. +1",
													legs		="Ken. Hakama +1",
													feet		="Ken. Sune-Ate +1",
													neck		="Fotia Gorget",
													waist		="Moonbow Belt +1",
													left_ear	="Sherida Earring",
													right_ear	="Moonshade Earring",
													left_ring	="Niqmaddu Ring",
													right_ring	="Gere Ring",
													back		=Segomo.DASTR}
    sets.precast.WSAcc							= set_combine(sets.precast.WS, {})
    sets.precast.WSMod							= set_combine(sets.precast.WS)
    sets.precast.MaxTP							= set_combine(sets.precast.WS)
    sets.precast.WS.Acc							= set_combine(sets.precast.WSAcc)
    sets.precast.WS.Mod							= set_combine(sets.precast.WSMod)
	sets.Magic									= {
													ammo		="Pemphredo Tathlum",
													head		=HerculeanHead.MAB,
													body		=HerculeanBody.MAB,
													hands		="Leyline Gloves",	
													legs		={ name="Herculean Trousers", augments={'Mag. Acc.+19 "Mag.Atk.Bns."+19','Magic burst dmg.+8%','MND+10','Mag. Acc.+13','"Mag.Atk.Bns."+12',}},
													feet		=HerculeanFeet.MAB,
													neck		="Baetyl Pendant",
													waist		="Eschan Stone",
													left_ear	="Moonshade Earring",
													right_ear	="Friomisi Earring",
													left_ring	="Shiva Ring +1",
													right_ring	="Fenrir Ring +1",
													back		=Segomo.Magic}

	-- Hand-to-Hand
    sets.precast.WS['Raging Fists']				= set_combine(sets.precast.WS, {body="Kendatsuba Samue +1",})
    sets.precast.WS['Howling Fist']				= set_combine(sets.precast.WS, {body="Kendatsuba Samue +1",})
    sets.precast.WS['Asuran Fists']				= set_combine(sets.precast.WS, {
													head		="Hes. Crown +2",
													body		="Hes. Cyclas +3",
													hands		="Hes. Gloves +3",
													legs		="Hes. Hose +3",
													feet		="Hes. Gaiters +3",})
    sets.precast.WS["Ascetic's Fury"]			= set_combine(sets.precast.WS, {
													body		="Anch. Cyclas +3",
													hands		="Ryuo Tekko +1",
													neck		="Rancor Collar",
													right_ear	="Odr Earring"})
    sets.precast.WS["Victory Smite"]			= set_combine(sets.precast.WS, {
													body		="Anch. Cyclas +3",
													hands		="Ryuo Tekko +1",
													neck		="Rancor Collar",
													right_ear	="Odr Earring",
													back		=Segomo.Crit})
    sets.precast.WS['Shijin Spiral']			= set_combine(sets.precast.WS, {
													neck		="Mnk. Nodowa +2",
													legs		="Jokushu Haidate",
													right_ear	="Odr Earring",
													right_ring	="Regal Ring",
													back		=Segomo.DADEX})
    sets.precast.WS['Dragon Kick']				= set_combine(sets.precast.WS, {feet="Anchorite's Gaiters +2"})
    sets.precast.WS['Tornado Kick']				= set_combine(sets.precast.WS, {feet="Anchorite's Gaiters +2"})
    sets.precast.WS['Spinning Attack']			= set_combine(sets.precast.WS, {})

    sets.precast.WS["Raging Fists"].Acc			= set_combine(sets.precast.WSAcc)
    sets.precast.WS["Howling Fist"].Acc			= set_combine(sets.precast.WSAcc)
    sets.precast.WS["Asuran Fists"].Acc			= set_combine(sets.precast.WSAcc)
    sets.precast.WS["Ascetic's Fury"].Acc		= set_combine(sets.precast.WSAcc)
    sets.precast.WS["Victory Smite"].Acc		= set_combine(sets.precast.WSAcc)
    sets.precast.WS["Shijin Spiral"].Acc		= set_combine(sets.precast.WSAcc)
    sets.precast.WS["Dragon Kick"].Acc			= set_combine(sets.precast.WSAcc)
    sets.precast.WS["Tornado Kick"].Acc			= set_combine(sets.precast.WSAcc)

    sets.precast.WS["Raging Fists"].Mod			= set_combine(sets.precast.WSMod)
    sets.precast.WS["Howling Fist"].Mod			= set_combine(sets.precast.WSMod)
    sets.precast.WS["Asuran Fists"].Mod			= set_combine(sets.precast.WSMod)
    sets.precast.WS["Ascetic's Fury"].Mod		= set_combine(sets.precast.WSMod)
    sets.precast.WS["Victory Smite"].Mod		= set_combine(sets.precast.WSMod)
    sets.precast.WS["Shijin Spiral"].Mod		= set_combine(sets.precast.WSMod)
    sets.precast.WS["Dragon Kick"].Mod			= set_combine(sets.precast.WSMod)
    sets.precast.WS["Tornado Kick"].Mod			= set_combine(sets.precast.WSMod)

	-- Staff
	sets.precast.WS['Shell Crusher']			= set_combine(sets.Magic, {
													head		="Malignance Chapeau",
													body		="Malignance Tabard",
													hands		="Malignance Gloves",
													legs		="Malignance Tights",
													feet		="Malignance Boots",
													neck		="Sanctity Necklace",
													left_ear	="Gwati Earring",
													right_ear	="Ishvara Earring",
													left_ring	="Metamor. Ring +1",
													right_ring	="Weather. Ring",})
    sets.precast.WS['Cataclysm']				= set_combine(sets.Magic, {head="Pixie Hairpin +1",right_ring="Archon Ring",})

	------------------------------------------------------------------------------------------------
	---------------------------------------- Midcast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.midcast.FastRecast						= {}
    sets.midcast.Utsusemi						= {}

	------------------------------------------------------------------------------------------------
	---------------------------------------- Idle Sets ---------------------------------------------
	------------------------------------------------------------------------------------------------

	sets.resting								= {}
	sets.idle									= {
													ammo		="Staunch Tathlum",
													head		="Rao Kabuto +1",
													body		="Hiza. Haramaki +2",
													hands		="Rao Kote +1",
													legs		="Rao Haidate +1",
													feet		="Rao Sune-Ate +1",
													neck		="Bathy Choker +1",
													waist		="Moonbow Belt +1",
													left_ear	="Odnowa Earring +1",
													right_ear	="Infused Earring",
													left_ring	="Sheltered Ring",
													right_ring	="Paguroidea Ring",
													back		="Reiki Cloak",}
	sets.idle.Town								= set_combine(sets.idle, {feet="Herald's Gaiters"})
	sets.idle.Weak								= sets.idle

	------------------------------------------------------------------------------------------------
	--------------------------------------- Defense Sets -------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.defense.PDT							= {
													ammo		="Staunch Tathlum",
													head		="Malignance Chapeau",
													body		="Malignance Tabard",
													hands		="Malignance Gloves",
													legs		="Malignance Tights",
													feet		="Malignance Boots",
													neck		="Loricate Torque +1",
													waist		="Moonbow Belt +1",
													left_ear	="Odnowa Earring +1",
													right_ear	="Infused Earring",
													left_ring	="Gelatinous Ring +1",
													right_ring	="Defending Ring",
													back		="Shadow Mantle",}
    sets.defense.HP								= set_combine(sets.defense.PDT, {})
    sets.defense.MDT							= set_combine(sets.defense.PDT, {
													feet		="Ahosi Leggings",
													neck		="Warder's Charm +1",
													right_ear	="Eabani Earring",
													left_ring	="Shadow Ring",
													back		="Reiki Cloak",})
    sets.Kiting									= {feet="Herald's Gaiters"}
    sets.ExtraRegen								= {
													ammo		="Staunch Tathlum",
													head		="Rao Kabuto +1",
													body		="Hiza. Haramaki +2",
													hands		="Rao Kote +1",
													legs		="Rao Haidate +1",
													feet		="Rao Sune-Ate +1",
													neck		="Bathy Choker +1",
													waist		="Moonbow Belt +1",
													left_ear	="Odnowa Earring +1",
													right_ear	="Infused Earring",
													left_ring	="Sheltered Ring",
													right_ring	="Paguroidea Ring",
													back		="Reiki Cloak",}

	------------------------------------------------------------------------------------------------
	---------------------------------------- Engaged Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.engaged								= {
													ammo		="Ginsen",
													head		="Adhemar Bonnet +1",
													body		="Ken. Samue +1",
													hands		="Adhemar Wrist. +1",
													legs		="Hes. Hose +3",
													feet		="Anch. Gaiters +3",
													neck		="Monk's Nodowa +2",
													waist		="Moonbow Belt +1",
													left_ear	="Sherida Earring",
													right_ear	="Mache Earring +1",
													left_ring	="Niqmaddu Ring",
													right_ring	="Gere Ring",
													back		=Segomo.DADEX}
    sets.engaged.SomeAcc						= set_combine(sets.engaged, {
													head		="Ken. Jinpachi +1",
													hands		="Ken. Tekko +1",
													feet		="Ken. Sune-Ate +1",
													right_ring	="Chirich Ring +1",
													back		=Segomo.STP})
    sets.engaged.Acc							= set_combine(sets.engaged.SomeAcc, {
													legs		="Ken. Hakama +1",
													left_ear	="Telos Earring",})
    sets.engaged.Mod							= set_combine(sets.engaged)

    -- Defensive melee hybrid sets
    sets.engaged.PDT							= set_combine(sets.engaged, {
													ammo		="Staunch Tathlum",
													head		="Malignance Chapeau",
													body		="Malignance Tabard",
													hands		="Malignance Gloves",
													legs		="Malignance Tights",
													feet		="Malignance Boots",
													left_ear	="Odnowa Earring +1",
													right_ring	="Defending Ring",
													back		=Segomo.Hybrid})
    sets.engaged.SomeAcc.PDT					= set_combine(sets.engaged.PDT, {})
    sets.engaged.Acc.PDT						= set_combine(sets.engaged.PDT, {})
    sets.engaged.Counter						= set_combine(sets.engaged.PDT, {
													body		="Hes. Cyclas +3",
													legs		="Anch. Hose +2",
													feet		="Hes. Gaiters +3",
													back		=Segomo.DADEX})
    sets.engaged.Acc.Counter					= set_combine(sets.engaged.PDT, {})

    -- Hundred Fists/Impetus melee set mods
    sets.engaged.HF								= set_combine(sets.engaged)
    sets.engaged.HF.Impetus						= set_combine(sets.engaged, {body="Bhikku Cyclas +1",right_ear="Cessance Earring"})
    sets.engaged.Acc.HF							= set_combine(sets.engaged.Acc)
    sets.engaged.Acc.HF.Impetus					= set_combine(sets.engaged.Acc, {body="Bhikku Cyclas +1",right_ear="Cessance Earring"})
    sets.engaged.Counter.HF						= set_combine(sets.engaged.Counter)
    sets.engaged.Counter.HF.Impetus				= set_combine(sets.engaged.Counter, {body="Bhikku Cyclas +1",right_ear="Cessance Earring"})
    sets.engaged.Acc.Counter.HF					= set_combine(sets.engaged.Acc.Counter)
    sets.engaged.Acc.Counter.HF.Impetus			= set_combine(sets.engaged.Acc.Counter, {body="Bhikku Cyclas +1",right_ear="Cessance Earring"})

    sets.engaged.Impetus						= set_combine(sets.engaged, {body="Bhikku Cyclas +1",right_ear="Cessance Earring"})
    sets.engaged.Acc.Impetus					= set_combine(sets.engaged.SomeAcc, {body="Bhikku Cyclas +1",right_ear="Cessance Earring"})
    sets.engaged.Counter.Impetus				= set_combine(sets.engaged.Counter, {body="Bhikku Cyclas +1",right_ear="Cessance Earring"})
    sets.engaged.Acc.Counter.Impetus			= set_combine(sets.engaged.Acc.Counter, {body="Bhikku Cyclas +1",right_ear="Cessance Earring"})

    -- Footwork combat form
    sets.engaged.Footwork						= {}
    sets.engaged.Footwork.Acc					= {}

    sets.impetus_body							= {body="Bhikku Cyclas +1"}
    sets.footwork_kick_feet						= {}
end
-------------------------------------------------------------------------------------------------------------------
-- Job-specific hooks for standard casting events.
-------------------------------------------------------------------------------------------------------------------

-- Set eventArgs.handled to true if we don't want any automatic gear equipping to be done.
-- Set eventArgs.useMidcastGear to true if we want midcast gear equipped on precast.
function job_precast(spell, action, spellMap, eventArgs)
    -- Don't gearswap for weaponskills when Defense is on.
    if spell.type == 'WeaponSkill' and state.DefenseMode.current ~= 'None' then
        eventArgs.handled = true
	end
end

-- Run after the general precast() is done.
function job_post_precast(spell, action, spellMap, eventArgs)
    if spell.type == 'WeaponSkill' then
        if state.Buff.Impetus and (spell.english == "Ascetic's Fury" or spell.english == "Victory Smite") then
			equip(sets.impetus_body)
        elseif state.Buff.Footwork and spell.english == "Tornado Kick" then
            equip(sets.footwork_kick_feet)
        end
    end
    if spell.english == "Raging Fists" or spell.english == "Howling Fist" and player.tp > 2251 then
        equip({right_ear="Brutal Earring"})
    end
end

function job_aftercast(spell, action, spellMap, eventArgs)
    if spell.type == 'WeaponSkill' and not spell.interrupted and state.FootworkWS and state.Buff.Footwork then
        send_command('cancel Footwork')
    end
end
-------------------------------------------------------------------------------------------------------------------
-- Job-specific hooks for non-casting events.
-------------------------------------------------------------------------------------------------------------------

-- Called when a player gains or loses a buff.
-- buff == buff gained or lost
-- gain == true if the buff was gained, false if it was lost.
function job_buff_change(buff, gain)
    -- Set Footwork as combat form any time it's active and Hundred Fists is not.
    if buff == 'Footwork' and gain and not buffactive['hundred fists'] then
        state.CombatForm:set('Footwork')
    elseif buff == "Hundred Fists" and not gain and buffactive.footwork then
        state.CombatForm:set('Footwork')
    else
        state.CombatForm:reset()
    end
    -- Hundred Fists and Impetus modify the custom melee groups
    if buff == "Hundred Fists" or buff == "Impetus" then
        classes.CustomMeleeGroups:clear()
        
        if (buff == "Hundred Fists" and gain) or buffactive['hundred fists'] then
            classes.CustomMeleeGroups:append('HF')
        end
        
        if (buff == "Impetus" and gain) or buffactive.impetus then
            classes.CustomMeleeGroups:append('Impetus')
        end
    end

    -- Update gear if any of the above changed
    if buff == "Hundred Fists" or buff == "Impetus" or buff == "Footwork" then
        handle_equipping_gear(player.status)
    end
end

function customize_idle_set(idleSet)
    if player.hpp < 75 then
        idleSet = set_combine(idleSet, sets.ExtraRegen)
    end
    return idleSet
end

-- Called by the 'update' self-command.
function job_update(cmdParams, eventArgs)
    update_combat_form()
    update_melee_groups()
end

function update_combat_form()
    if buffactive.footwork and not buffactive['hundred fists'] then
        state.CombatForm:set('Footwork')
    else
        state.CombatForm:reset()
    end
end

function update_melee_groups()
    classes.CustomMeleeGroups:clear()
    
    if buffactive['hundred fists'] then
        classes.CustomMeleeGroups:append('HF')
    end
    
    if buffactive.impetus then
        classes.CustomMeleeGroups:append('Impetus')
    end
end

function select_default_macro_book()
    -- Default macro set/book
    if player.sub_job == 'WAR' then
        set_macro_page(1, 4)
    else
        set_macro_page(1, 4)
    end
end

function display_current_job_state(eventArgs)
	local msg = 'MNKモ'

	msg = msg .. ' :: '
	msg = msg .. '[Offense: '..state.OffenseMode.current..']'
	msg = msg .. ' '
	msg = msg .. '[WS: '..state.WeaponskillMode.current .. ']'
	msg = msg .. ' '
	msg = msg .. '[TH: ' .. state.TreasureMode.value .. ']'
	msg = msg .. ' '
	if state.DefenseMode.value ~= 'None' then
		msg = msg .. '['..state.DefenseMode.value .. ']'
	end
	
	add_to_chat(060, msg)
	eventArgs.handled = true
end

-- Keep track of the current hit count while Impetus is up.
function on_action_for_impetus(action)
    if state.Buff.Impetus then
        -- count melee hits by player
        if action.actor_id == player.id then
            if action.category == 1 then
                for _,target in pairs(action.targets) do
                    for _,action in pairs(target.actions) do
                        -- Reactions (bitset):
                        -- 1 = evade
                        -- 2 = parry
                        -- 4 = block/guard
                        -- 8 = hit
                        -- 16 = JA/weaponskill?
                        -- If action.reaction has bits 1 or 2 set, it missed or was parried. Reset count.
                        if (action.reaction % 4) > 0 then
                            info.impetus_hit_count = 0
                        else
                            info.impetus_hit_count = info.impetus_hit_count + 1
                        end
                    end
                end
            elseif action.category == 3 then
                -- Missed weaponskill hits will reset the counter.  Can we tell?
                -- Reaction always seems to be 24 (what does this value mean? 8=hit, 16=?)
                -- Can't tell if any hits were missed, so have to assume all hit.
                -- Increment by the minimum number of weaponskill hits: 2.
                for _,target in pairs(action.targets) do
                    for _,action in pairs(target.actions) do
                        -- This will only be if the entire weaponskill missed or was parried.
                        if (action.reaction % 4) > 0 then
                            info.impetus_hit_count = 0
                        else
                            info.impetus_hit_count = info.impetus_hit_count + 2
                        end
                    end
                end
            end
        elseif action.actor_id ~= player.id and action.category == 1 then
            -- If mob hits the player, check for counters.
            for _,target in pairs(action.targets) do
                if target.id == player.id then
                    for _,action in pairs(target.actions) do
                        -- Spike effect animation:
                        -- 63 = counter
                        -- ?? = missed counter
                        if action.has_spike_effect then
                            -- spike_effect_message of 592 == missed counter
                            if action.spike_effect_message == 592 then
                                info.impetus_hit_count = 0
                            elseif action.spike_effect_animation == 63 then
                                info.impetus_hit_count = info.impetus_hit_count + 1
                            end
                        end
                    end
                end
            end
        end
        
        --add_to_chat(123,'Current Impetus hit count = ' .. tostring(info.impetus_hit_count))
    else
        info.impetus_hit_count = 0
    end
	
function th_action_check(category, param)
	if category == 2 or
		(category == 3 and param == 30) or
		(category == 6 and info.default_ja_ids:contains(param)) or
		(category == 14 and info.default_u_ja_ids:contains(param))
		then return true
	end
end
end
