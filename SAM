-------------------------------------------------------------------------------------------------------------------
-- Initialization function that defines sets and variables to be used.
-------------------------------------------------------------------------------------------------------------------
--Ionis Zones
--Anahera Blade (4 hit): 52
--Tsurumaru (4 hit): 49
--Kogarasumaru (or generic 450 G.katana) (5 hit): 40
--Amanomurakumo/Masamune 437 (5 hit): 46
--
--Non Ionis Zones:
--Anahera Blade (4 hit): 52
--Tsurumaru (5 hit): 24
--Kogarasumaru (5 hit): 40
--Amanomurakumo/Masamune 437 (5 hit): 46
--
--Aftermath sets
-- Koga AM1/AM2 = sets.engaged.Kogarasumaru.AM
-- Koga AM3 = sets.engaged.Kogarasumaru.AM3
-- Amano AM = sets.engaged.Amanomurakumo.AM
-- Using Namas Arrow while using Amano will cancel STPAM set

-- IMPORTANT: Make sure to also get the Mote-Include.lua file (and its supplementary files) to go with this.

-- Initialization function for this job file.
function get_sets()
    mote_include_version = 2
	include('Mote-Include.lua')
	include('organizer-lib')
end

function job_setup()
    get_combat_form()
    --get_combat_weapon()
    update_melee_groups()
    
    state.CapacityMode = M(false, 'Capacity Point Mantle')
    state.YoichiAM = M(false, 'Cancel Yoichi AM Mode')
    -- list of weaponskills that make better use of otomi helm in low acc situations
    wsList = S{'Tachi: Fudo', 'Tachi: Shoha'}

    gear.RAarrow = {name="Eminent Arrow"}
    LugraWSList = S{'Tachi: Rana', 'Tachi: Shoha', 'Namas Arrow', 'Tachi: Jinpu'}

    state.Buff.Sekkanoki = buffactive.sekkanoki or false
    state.Buff.Sengikori = buffactive.sengikori or false 
    state.Buff['Third Eye'] = buffactive['Third Eye'] or false
    state.Buff['Meikyo Shisui'] = buffactive['Meikyo Shisui'] or false
	
    info.default_ja_ids = S{35, 204}
    info.default_u_ja_ids = S{201, 202, 203, 205, 207}
	
    include('Mote-TreasureHunter')
end

function user_setup()
    state.OffenseMode:options('Normal', 'Mid', 'Acc')
    state.HybridMode:options('Normal', 'mEva','DT')
    state.WeaponskillMode:options('Normal', 'Mid', 'Acc')
    state.IdleMode:options('Normal', 'Regain')
    state.RestingMode:options('Normal')
    state.PhysicalDefenseMode:options('PDT', 'Reraise')
    state.MagicalDefenseMode:options('MDT')
    
	send_command('bind !` ja Hasso')
	send_command('bind f2 ws Tachi:Fudo')
	send_command('bind f3 ws Tachi:Shoha')
	send_command('bind f4 ws Tachi:Kasha')
	send_command('bind f5 ws Tachi:Jinpu')
	send_command('bind f6 ws Tachi:Ageha')
	send_command('bind f7 ws ImpulseDrive')
    send_command('bind != gs c toggle CapacityMode')
    
    select_default_macro_book()
end

function file_unload()
	send_command('unbind f1')
	send_command('unbind f2')
	send_command('unbind f3')
	send_command('unbind f4')
	send_command('unbind f5')
	send_command('unbind f6')
	send_command('unbind f7')
	send_command('unbind f8')
	send_command('unbind `')
    send_command('unbind !`')
    send_command('unbind ^1')
    send_command('unbind ^2')
    send_command('unbind ^3')
    send_command('unbind ^4')
    send_command('unbind ^5')
    send_command('unbind ^6')
    send_command('unbind ^7')
    send_command('unbind ^8')
    send_command('unbind ^9')
    send_command('unbind ^0')
    send_command('unbind !1')
    send_command('unbind !2')
    send_command('unbind !3')
    send_command('unbind !4')
    send_command('unbind !5')
    send_command('unbind !6')
    send_command('unbind !7')
    send_command('unbind !8')
    send_command('unbind !9')
    send_command('unbind !0')
end
--[[
-- SC's
Rana > Shoha > Fudo > Kasha > Shoha > Fudo - light
Rana > Shoha > Fudo > Kasha > Rana > Fudo - dark

Kasha > Shoha > Fudo
Fudo > Kasha > Shoha > fudo
Shoha > Fudo > Kasha > Shoha > Fudo

--]]
function init_gear_sets()
	------------------------------------------------------------------------------------------------
	------------------------------------ Smertrios's Cape ------------------------------------------
	------------------------------------------------------------------------------------------------
    
	Smertrios								= {}
	Smertrios.TP							= { name="Smertrios's Mantle", augments={'DEX+20','Accuracy+20 Attack+20','Accuracy+10','"Store TP"+10','Phys. dmg. taken-10%',}}
	Smertrios.WS							= { name="Smertrios's Mantle", augments={'STR+20','Accuracy+20 Attack+20','STR+10','Weapon skill damage +10%','Phys. dmg. taken-10%',}}
	Smertrios.Hybrid						= { name="Smertrios's Mantle", augments={'HP+60','Eva.+20 /Mag. Eva.+20','Mag. Evasion+10','"Store TP"+10','Magic dmg. taken-10%',}}
	Smertrios.DA							= { name="Smertrios's Mantle", augments={'STR+20','Accuracy+20 Attack+20','STR+10','"Dbl.Atk."+10','Phys. dmg. taken-10%',}}
	Smertrios.Ranged						= { name="Smertrios's Mantle", augments={'STR+20','Rng.Acc.+20 Rng.Atk.+20','"Store TP"+10',}}

	------------------------------------------------------------------------------------------------
	---------------------------------- Job Abilities Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.TreasureHunter						= {
												head		="Volte Cap",
												legs		="Volte Hose",
												waist		="Chaac Belt"}
    sets.precast.JA.Meditate				= {
												head		="Wakido Kabuto +3",
												hands		="Sakonji Kote +3",
												back		=Smertrios.Hybrid}
--	sets.precast.JA.Seigan					= {	head		="Unkai Kabuto +2"}
    sets.precast.JA['Warding Circle']		= {	head		="Wakido Kabuto +3"}
    sets.precast.JA['Third Eye']			= {	legs		="Sakonji Haidate +3"}
	sets.precast.JA.Shikikoyo				= {	legs		="Sakonji Haidate +3"}
--	sets.precast.JA['Blade Bash']			= {	hands		="Sakonji Kote +3"}
    sets.precast.FC							= {}
    sets.precast.JA.Jump					= sets.engaged.Mid
	sets.precast.JA['High Jump']			= sets.precast.JA.Jump
    sets.precast.RA							= {	hands		="Buremte Gloves"}
    sets.midcast.RA							= {
												head		="Ken. Jinpachi +1",
												body		="Ken. Samue +1",
												hands		="Ken. Tekko +1",
												legs		="Ken. Hakama +1",
												feet		="Ken. Sune-Ate +1",
												neck		="Sanctity Necklace",
												waist		="Yemaya Belt",
												left_ear	="Enervating Earring",
												right_ear	="Telos Earring",
												left_ring	="Regal Ring",
												right_ring	="Ilabrat Ring",
												back		=Smertrios.Ranged}
    sets.precast.Waltz						= {}
    sets.precast.Waltz['Healing Waltz']		= {}
    sets.CapacityMantle						= {	back		="Mecistopins Mantle"}
--	sets.Berserker							= {	neck		="Berserker's Torque"}
    sets.WSDayBonus							= {	head		="Gavialis Helm"}
    sets.Lugra								= {	right_ear	="Lugra Earring +1"}
    sets.Brutal								= {	right_ear	="Brutal Earring"}

	------------------------------------------------------------------------------------------------
	------------------------------------ Weaponskill Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.precast.WS							= {
												ammo		="Knobkierrie",
--												head		="Mpaca\'s Cap",
												head		="Nyame Helm",
												body		="Sakonji Domaru +3",
												hands		="Nyame Gauntlets",
												legs		="Nyame Flanchard",
												feet		="Nyame Sollerets",
												neck		="Sam. Nodowa +2",
												waist		="Sailfi Belt +1",
												left_ear	="Thrud Earring",
												right_ear	="Moonshade Earring",
												left_ring	="Niqmaddu Ring",
												right_ring	="Regal Ring",
												back		=Smertrios.WS}
    sets.precast.WS.Mid						= set_combine(sets.precast.WS, {})
    sets.precast.WS.Acc						= set_combine(sets.precast.WS.Mid, {
												head		="Nyame Helm",
												body		="Nyame Mail",
												hands		="Nyame Gauntlets",
												legs		="Nyame Flanchard",
												feet		="Nyame Sollerets",})

	-- Great Katana
    sets.precast.WS['Tachi: Shoha']			= set_combine(sets.precast.WS, {
												head		="Stinger Helm +1",
												body		="Mpaca\'s Doublet",
												hands		="Mpaca\'s Gloves",
												legs		="Tatena. Haidate +1",
												back		=Smertrios.DA})
    sets.precast.WS['Tachi: Shoha'].Mid		= set_combine(sets.precast.WS.Mid, {})
    sets.precast.WS['Tachi: Shoha'].Acc		= set_combine(sets.precast.WS.Acc, {})
	
    sets.precast.WS['Tachi: Rana']			= set_combine(sets.precast.WS, {
												head		="Flam. Zucchetto +2",
												hands		="Mpaca\'s Gloves",
												legs		="Tatena. Haidate +1",
												back		=Smertrios.DA})
    sets.precast.WS['Tachi: Rana'].Mid		= set_combine(sets.precast.WS.Mid, {})
    sets.precast.WS['Tachi: Rana'].Acc		= set_combine(sets.precast.WS.Acc, {})

    sets.precast.WS['Tachi: Jinpu']			= set_combine(sets.precast.WS, {body="Nyame Mail",legs="Nyame Flanchard"})
    sets.precast.WS['Tachi: Goten']			= set_combine(sets.precast.WS, {body="Nyame Mail",legs="Nyame Flanchard"})
    sets.precast.WS['Tachi: Kagero']		= set_combine(sets.precast.WS, {body="Nyame Mail",legs="Nyame Flanchard",})
    sets.precast.WS['Tachi: Koki']			= set_combine(sets.precast.WS, {body="Nyame Mail",legs="Nyame Flanchard",right_ring="Weather. Ring"})
    sets.precast.WS['Tachi: Ageha']			= set_combine(sets.precast.WS, {
												ammo		="Pemphredo Tathlum",
												head		="Blistering Sallet +1",
												hands		="Flam. Manopolas +2",
												legs		="Sakonji Haidate +3",
												feet		="Flamma Gambieras +2",
												neck		="Sanctity Necklace",
												waist		="Eschan Stone",
												left_ear	="Crep. Earring",
												left_ring	="Metamor. Ring +1",
												right_ring	="Flamma Ring",
												back		=Smertrios.WS})

	-- Polearm
	sets.precast.WS['Impulse Drive']		= set_combine(sets.precast.WS, {
												waist		="Kentarch Belt +1",})
	sets.precast.WS['Sonic Thrust']			= set_combine(sets.precast.WS, {
												hands		="Ryuo Tekko +1",
												legs		="Mpaca's Hose",
												feet		={ name="Valorous Greaves", augments={'Crit.hit rate+5','"Mag.Atk.Bns."+9','Haste+2','Accuracy+18 Attack+18',}},
												left_ear	="Schere Earring",
												back		=Smertrios.DA})
	sets.precast.WS['Vorpal Thrust']		= set_combine(sets.precast.WS, {
												hands		="Ryuo Tekko +1",
												legs		="Mpaca\'s Hose",
												feet		={ name="Valorous Greaves", augments={'Crit.hit rate+5','"Mag.Atk.Bns."+9','Haste+2','Accuracy+18 Attack+18',}},
												left_ear	="Schere Earring",
												back		=Smertrios.DA})
    sets.precast.WS['Penta Thrust']			= set_combine(sets.precast.WS, {
												hands		="Ryuo Tekko +1",
												legs		="Mpaca\'s Hose",
												feet		={ name="Valorous Greaves", augments={'Crit.hit rate+5','"Mag.Atk.Bns."+9','Haste+2','Accuracy+18 Attack+18',}},
												left_ear	="Schere Earring",
												back		=Smertrios.DA})
    sets.precast.WS['Stardiver']			= set_combine(sets.precast.WS, {
												hands		="Ryuo Tekko +1",
												legs		="Mpaca\'s Hose",
												feet		={ name="Valorous Greaves", augments={'Crit.hit rate+5','"Mag.Atk.Bns."+9','Haste+2','Accuracy+18 Attack+18',}},
												left_ear	="Schere Earring",
												back		=Smertrios.DA})
	sets.precast.WS['Thunder Thrust']		= set_combine(sets.precast.WS, {body="Nyame Mail",legs="Nyame Flanchard"})
	sets.precast.WS['Raiden Thrust']		= set_combine(sets.precast.WS, {body="Nyame Mail",legs="Nyame Flanchard"})

	-- Archery
    sets.precast.WS['Namas Arrow']			= set_combine(sets.precast.WS, {ammo="Tulfaire Arrow"})
    sets.precast.WS['Namas Arrow'].Mid		= set_combine(sets.precast.WS['Namas Arrow'], {})
    sets.precast.WS['Namas Arrow'].Acc		= {}
    sets.precast.WS['Apex Arrow']			= set_combine(sets.precast.WS['Namas Arrow'], {})
    sets.precast.WS['Apex Arrow'].Mid		= sets.precast.WS['Apex Arrow']
    sets.precast.WS['Apex Arrow'].Acc		= set_combine(sets.precast.WS['Apex Arrow'], {})

	------------------------------------------------------------------------------------------------
	---------------------------------------- Midcast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.midcast.FastRecast					= {}
	
	------------------------------------------------------------------------------------------------
	------------------------------------------- Misc Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.resting							= {}
    sets.idle								= {
--												range		="Ullr",
--												ammo		="Beetle Arrow",
												ammo		="Staunch Tathlum +1",
												head		="Wakido Kabuto +3",
												body		="Sacro Breastplate",
												hands		="Rao Kote +1",
												legs		="Rao Haidate +1",
												feet		="Danzo Sune-Ate",
												neck		="Bathy Choker +1",
												waist		="Flume Belt +1",
												left_ear	="Odnowa Earring +1",
												right_ear	="Infused Earring",
												left_ring	="Paguroidea Ring",
												right_ring	="Chirich Ring +1",
												back		=Smertrios.Hybrid}
	sets.idle.Regain						= set_combine(sets.idle, {head="Wakido Kabuto +3",left_ring="Roller's Ring"})
    sets.idle.Adoulin						= set_combine(sets.idle, {feet="Danzo sune-ate"})
    sets.idle.Field							= set_combine(sets.idle, {feet="Rao Sune-Ate +1",})
    sets.idle.Regen							= set_combine(sets.idle, {feet="Rao Sune-Ate +1",})
    sets.idle.Weak							= set_combine(sets.idle, {})
    sets.idle.Yoichi						= set_combine(sets.idle, {})

    -- Defense sets
    sets.defense.PDT						= {
												ammo		="Staunch Tathlum +1",
												head		="Nyame Helm",
												body		="Nyame Mail",
												hands		="Nyame Gauntlets",
												legs		="Nyame Flanchard",
												feet		="Nyame Sollerets",
												neck		="Loricate Torque +1",
												waist		="Flume Belt +1",
												left_ear	="Odnowa Earring +1",
												right_ear	="Tuisto Earring",
												left_ring	="Gelatinous Ring +1",
												right_ring	="Defending Ring",
												back		=Smertrios.Hybrid}
    sets.defense.Reraise					= set_combine(sets.defense.PDT, {head="Twilight Helm",body="Twilight Mail"})
    sets.defense.MDT						= set_combine(sets.defense.PDT, {})
    sets.Kiting								= {	feet		="Danzo Sune-ate"}
    sets.Reraise							= {
												head		="Twilight Helm",
												body		="Twilight Mail"}
	
	------------------------------------------------------------------------------------------------
	---------------------------------------- Engaged Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
    -- Variations for TP weapon and (optional) offense/defense modes.  Code will fall back on previous
    -- sets if more refined versions aren't defined.
    -- If you create a set with both offense and defense modes, the offense mode should be first.
    -- EG: sets.engaged.Dagger.Accuracy.Evasion
    
    -- I generally use Anahera outside of Adoulin areas, so this set aims for 47 STP + 5 from Anahera (52 total)
    -- Note, this set assumes use of Cibitshavore (hence the arrow as ammo)

    sets.engaged							= {
--												range		="Ullr",
--												ammo		="Beetle Arrow",
												ammo		="Coiste Bodhar",
												head		="Ken. Jinpachi +1",
												body		="Dagon Breast.",
												hands		="Wakido Kote +3",
												legs		="Mpaca\'s Hose",
												feet		="Ryuo Sune-Ate +1",
												neck		="Sam. Nodowa +2",
												waist		="Sailfi Belt +1",
												left_ear	="Crep. Earring",
												right_ear	="Telos Earring",
												left_ring	="Niqmaddu Ring",
												right_ring	="Chirich Ring +1",
												back		=Smertrios.TP}
	sets.engaged.Mid						= set_combine(sets.engaged, {
												body		="Kasuga Domaru +2",
--												hands		="Mpaca\'s Gloves",
--												legs		="Mpaca\'s Hose",
												feet		="Ryuo Sune-Ate +1",
												left_ear	="Dedition Earring",})
    sets.engaged.Acc						= set_combine(sets.engaged.Mid, {
												head		="Nyame Helm",
												feet		="Nyame Sollerets",
--												left_ear	="Odnowa Earring +1",
--												right_ear	="Tuisto Earring",
												left_ring	="Defending Ring"})
    
    sets.engaged.Yoichi						= set_combine(sets.engaged, {})
    sets.engaged.Yoichi.Mid					= set_combine(sets.engaged.Yoichi, {})
    sets.engaged.Yoichi.Acc					= set_combine(sets.engaged.Yoichi.Mid, {})
    
	-- Magic Evasion
    sets.engaged.mEva						= set_combine(sets.engaged, {
												body		="Ken. Samue +1",
												legs		="Ken. Hakama +1",
												feet		="Ken. Sune-Ate +1",
												back		=Smertrios.Hybrid})
    sets.engaged.Yoichi.mEva				= set_combine(sets.engaged.mEva,  {
												body		="Mpaca's Doublet",
												feet		={ name="Valorous Greaves", augments={'Crit.hit rate+5','"Mag.Atk.Bns."+9','Haste+2','Accuracy+18 Attack+18',}},
												left_ear	="Crep. Earring",})
    sets.engaged.Acc.mEva					= set_combine(sets.engaged.mEva, {
												head		="Flam. Zucchetto +2",
												body		="Tatena. Harama. +1",
												hands		="Wakido Kote +3",
												legs		="Tatena. Haidate +1",
												feet		="Tatena. Sune. +1",
												waist		="Sailfit Belt +1",})
	
	-- Physical Damage Taken
    sets.engaged.DT							= set_combine(sets.engaged, {})
    
    sets.engaged.DT.Yoichi					= set_combine(sets.engaged.DT, {})
    sets.engaged.Acc.DT						= set_combine(sets.engaged.DT, {})
    sets.engaged.Acc.DT.Yoichi				= set_combine(sets.engaged.Acc.DT, {})
    	
    sets.engaged.Amanomurakumo				= set_combine(sets.engaged, {})
    sets.engaged.Amanomurakumo.AM			= set_combine(sets.engaged, {})
	
    sets.engaged.Kogarasumaru				= set_combine(sets.engaged, {})
    sets.engaged.Kogarasumaru.AM			= set_combine(sets.engaged, {})
    sets.engaged.Kogarasumaru.AM3			= set_combine(sets.engaged, {})
    
    sets.buff.Sekkanoki						= {}
    sets.buff.Sengikori						= {}
    sets.buff['Meikyo Shisui']				= {	feet		="Sak. Sune-Ate +3"}
    
    sets.thirdeye							= {	legs		="Sakonji Haidate +3"}
--	sets.seigan								= {	hands		="Otronif Gloves +1"}
    sets.bow								= {	ammo		=gear.RAarrow}
	sets.doom								= {
												neck		="Nicander's Necklace",
												waist		="Gishdubar Sash",
												left_ring	={name="Eshmun's Ring", bag="wardrobe4"},
												right_ring	={name="Eshmun's Ring", bag="wardrobe5"}}
end

function job_pretarget(spell, action, spellMap, eventArgs)
	if spell.type:lower() == 'weaponskill' then
		-- Change any GK weaponskills to polearm weaponskill if we're using a polearm.
		if player.equipment.main =='Shining One' then
			if spell.english:startswith("Tachi:") then
				send_command('@input /ws "Impulse Drive" '..spell.target.raw)
				eventArgs.cancel = true
			end
		end
	end
    if state.Buff[spell.english] ~= nil then
        state.Buff[spell.english] = true
    end
end

function job_precast(spell, action, spellMap, eventArgs)
    --if spell.english == 'Third Eye' and not buffactive.Seigan then
    --    cancel_spell()
    --    send_command('@wait 0.5;input /ja Seigan <me>')
    --    send_command('@wait 1;input /ja "Third Eye" <me>')
    --end
	if state.Buff[spell.english] ~= nil then
		state.Buff[spell.english] = true
	end
end
-- Run after the default precast() is done.
-- eventArgs is the same one used in job_precast, in case information needs to be persisted.
function job_post_precast(spell, action, spellMap, eventArgs)
	if spell.type:lower() == 'weaponskill' then
		if state.Buff.Sekkanoki then
			equip(sets.buff.Sekkanoki)
		end
        if state.CapacityMode.value then
            equip(sets.CapacityMantle)
        end
        if use_gavialis then
            if is_sc_element_today(spell) then
                if wsList:contains(spell.english) then
                    equip(sets.WSDayBonus)
                end
            end
        end
		if player.tp > 2851 then
			equip({right_ear="Lugra Earring +1"})
		end
		if LugraWSList:contains(spell.english) then
			if world.time >= (17*60) or world.time <= (7*60) then
				equip(sets.Lugra)
			end
		end
		if state.Buff['Meikyo Shisui'] then
			equip(sets.buff['Meikyo Shisui'])
		end
	end
    if spell.english == "Seigan" then
        -- Third Eye gearset is only called if we're in PDT mode
        if state.HybridMode.value == 'PDT' or state.PhysicalDefenseMode.value == 'PDT' then
            equip(sets.thirdeye)
        else
            equip(sets.seigan)
        end
    end
    if spell.name == 'Spectral Jig' and buffactive.sneak then
            -- If sneak is active when using, cancel before completion
            send_command('cancel 71')
    end
	if state.TreasureMode.value ~= 'None' then
		equip(sets.TreasureHunter)
	end
    update_am_type(spell)
end

-- Set eventArgs.handled to true if we don't want any automatic gear equipping to be done.
function job_midcast(spell, action, spellMap, eventArgs)
	if spell.action_type == 'Magic' then
		equip(sets.midcast.FastRecast)
	end
end

-- Run after the default midcast() is done.
-- eventArgs is the same one used in job_midcast, in case information needs to be persisted.
function job_post_midcast(spell, action, spellMap, eventArgs)
	-- Effectively lock these items in place.
	if state.HybridMode.value == 'Reraise' or
    (state.HybridMode.value == 'Physical' and state.PhysicalDefenseMode.value == 'Reraise') then
		equip(sets.Reraise)
	end
    if state.Buff['Seigan'] then
        if state.DefenseMode.value == 'PDT' then
            equip(sets.thirdeye)
        else
            equip(sets.seigan)
        end
    end
	if state.TreasureMode.value ~= 'None' and spell.action_type == 'Ranged Attack' then
		equip(sets.TreasureHunter)
	end
end

function job_aftercast(spell, action, spellMap, eventArgs)
	if state.Buff[spell.english] ~= nil then
		state.Buff[spell.english] = not spell.interrupted or buffactive[spell.english]
	end
end

function customize_idle_set(idleSet)
    if player.hpp < 90 then
        idleSet = set_combine(idleSet, sets.idle.Regen)
    end
	return idleSet
end

function customize_melee_set(meleeSet)
    if state.Buff['Seigan'] then
        if state.DefenseMode.value == 'PDT' then
    	    meleeSet = set_combine(meleeSet, sets.thirdeye)
        else
            meleeSet = set_combine(meleeSet, sets.seigan)
        end
    end
    if state.CapacityMode.value then
        meleeSet = set_combine(meleeSet, sets.CapacityMantle)
    end
    if player.equipment.range == 'Yoichinoyumi' then
        meleeSet = set_combine(meleeSet, sets.bow)
    end
    return meleeSet
end

function job_status_change(newStatus, oldStatus, eventArgs)
    if newStatus == 'Engaged' then
        if player.inventory['Eminent Arrow'] then
            gear.RAarrow.name = 'Eminent Arrow'
        elseif player.inventory['Tulfaire Arrow'] then
            gear.RAarrow.name = 'Tulfaire Arrow'
        elseif player.equipment.ammo == 'empty' then
            add_to_chat(122, 'No more Arrows!')
        end
    elseif newStatus == 'Idle' then
        determine_idle_group()
    end
end
-- Called when a player gains or loses a buff.
-- buff == buff gained or lost
-- gain == true if the buff was gained, false if it was lost.
function job_buff_change(buff, gain)
    if state.Buff[buff] ~= nil then
    	state.Buff[buff] = gain
        handle_equipping_gear(player.status)
    end

    if S{'aftermath'}:contains(buff:lower()) then
        classes.CustomMeleeGroups:clear()
       
        if player.equipment.main == 'Amanomurakumo' and state.YoichiAM.value then
            classes.CustomMeleeGroups:clear()
        elseif player.equipment.main == 'Kogarasumaru'  then
            if buff == "Aftermath: Lv.3" and gain or buffactive['Aftermath: Lv.3'] then
                classes.CustomMeleeGroups:append('AM3')
            end
        elseif buff == "Aftermath" and gain or buffactive.Aftermath then
            classes.CustomMeleeGroups:append('AM')
        end
    end
    
    if not midaction() then
        handle_equipping_gear(player.status)
    end

end

-------------------------------------------------------------------------------------------------------------------
-- User code that supplements self-commands.
-------------------------------------------------------------------------------------------------------------------

-- Called by the 'update' self-command, for common needs.
-- Set eventArgs.handled to true if we don't want automatic equipping of gear.
function job_update(cmdParams, eventArgs)
	th_update(cmdParams, eventArgs)
	get_combat_form()
    update_melee_groups()
    --get_combat_weapon()
end

-- Set eventArgs.handled to true if we don't want the automatic display to be run.
function display_current_job_state(eventArgs)

end

-------------------------------------------------------------------------------------------------------------------
-- Utility functions specific to this job.
-------------------------------------------------------------------------------------------------------------------
--function get_combat_weapon()
--    if player.equipment.range == 'Yoichinoyumi' then
--        if player.equipment.main == 'Amanomurakumo' then
--            state.CombatWeapon:set('AmanoYoichi')
--        else
--            state.CombatWeapon:set('Yoichi')
--        end
--    else
--        state.CombatWeapon:set(player.equipment.main)
--    end
--end
-- Handle zone specific rules
windower.register_event('Zone change', function(new,old)
    determine_idle_group()
end)

function determine_idle_group()
    classes.CustomIdleGroups:clear()
    if areas.Adoulin:contains(world.area) then
    	classes.CustomIdleGroups:append('Adoulin')
    end
end

function get_combat_form()
    -- if areas.Adoulin:contains(world.area) and buffactive.ionis then
    -- 	state.CombatForm:set('Adoulin')
    -- else
    --     state.CombatForm:reset()
    -- end
end

function seigan_thirdeye_active()
    return state.Buff['Seigan'] or state.Buff['Third Eye']
end

function update_melee_groups()
    classes.CustomMeleeGroups:clear()

    if player.equipment.main == 'Amanomurakumo' and state.YoichiAM.value then
        -- prevents using Amano AM while overriding it with Yoichi AM
        classes.CustomMeleeGroups:clear()
    elseif player.equipment.main == 'Kogarasumaru' then
        if buffactive['Aftermath: Lv.3'] then
            classes.CustomMeleeGroups:append('AM3')
        end
    else
        if buffactive['Aftermath'] then
            classes.CustomMeleeGroups:append('AM')
        end
    end
end
-- call this in job_post_precast() 
function update_am_type(spell)
    if spell.type == 'WeaponSkill' and spell.skill == 'Archery' and spell.english == 'Namas Arrow' then
        if player.equipment.main == 'Amanomurakumo' then
            -- Yoichi AM overwrites Amano AM
            state.YoichiAM:set(true)
        end
    else
        state.YoichiAM:set(false)
    end
end

function check_buff(buff_name, eventArgs)
	if state.Buff[buff_name] then
		equip(sets.buff[buff_name] or {})
		if state.TreasureMode.value == 'None' or state.TreasureMode.value == 'Fulltime' then
		equip(sets.TreasureHunter)
		end
		eventArgs.handled = true
	end
end

function th_action_check(category, param)
	if category == 2 or
		(category == 3 and param == 30) or
		(category == 6 and info.default_ja_ids:contains(param)) or
		(category == 14 and info.default_u_ja_ids:contains(param))
		then return true
	end
end

function display_current_job_state(eventArgs)
    local msg = 'SAM侍 '

	msg = msg .. ' :: '
	msg = msg .. '[Idle: '..state.IdleMode.current.. ']'
	msg = msg .. ' '
	msg = msg .. '[Offense: '..state.OffenseMode.current..']'
	msg = msg .. ' '
	msg = msg .. '[WS: '..state.WeaponskillMode.current.. ']'
	msg = msg .. ' '
    if state.DefenseMode.value ~= 'None' then
        local defMode = state[state.DefenseMode.value ..'DefenseMode'].current
        msg = msg .. '[Defense: '..state.DefenseMode.value..']'
    end
	
    add_to_chat(060, msg)
    eventArgs.handled = true
end

function select_default_macro_book()
    -- Default macro set/book
    if player.sub_job == 'WAR' then
    	set_macro_page(1, 6)
    elseif player.sub_job == 'DRG' then
    	set_macro_page(2, 6)
    else
    	set_macro_page(1, 6)
    end
end
