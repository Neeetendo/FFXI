-- Original: Motenten / Modified: Arislan

-------------------------------------------------------------------------------------------------------------------
--  Keybinds
-------------------------------------------------------------------------------------------------------------------

--  Modes:      [ F9 ]              Cycle Offense Mode
--              [ F10 ]             Emergency -PDT Mode
--              [ ALT+F10 ]         Toggle Kiting Mode
--              [ F11 ]             Emergency -MDT Mode
--              [ CTRL+F11 ]        Cycle Casting Modes
--              [ F12 ]             Update Current Gear / Report Current Status
--              [ CTRL+F12 ]        Cycle Idle Modes
--              [ ALT+F12 ]         Cancel Emergency -PDT/-MDT Mode
--              [ WIN+R ]           Toggle Regen Mode
--              [ WIN+C ]           Toggle Capacity Points Mode
--
--  Abilities:  [ CTRL+` ]          Afflatus Solace
--              [ ALT+` ]           Afflatus Misery
--              [ CTRL+[ ]          Divine Seal
--              [ CTRL+] ]          Divine Caress
--              [ CTRL+` ]          Composure
--              [ CTRL+- ]          Light Arts/Addendum: White
--              [ CTRL+= ]          Dark Arts/Addendum: Black
--              [ CTRL+; ]          Celerity/Alacrity
--              [ ALT+[ ]           Accesion/Manifestation
--              [ ALT+; ]           Penury/Parsimony
--
--  Spells:     [ ALT+O ]           Regen IV
--
--  Weapons:    [ CTRL+W ]          Toggles Weapon Lock
--
--  WS:         [ CTRL+Numpad7 ]    Black Halo
--              [ CTRL+Numpad8 ]    Hexa Strike
--              [ CTRL+Numpad9 ]    Realmrazer
--              [ CTRL+Numpad1 ]    Flash Nova
--              [ CTRL+Numpad0 ]    Mystic Boon
--
--
--              (Global-Binds.lua contains additional non-job-related keybinds)


-------------------------------------------------------------------------------------------------------------------
-- Setup functions for this job.  Generally should not be modified.
-------------------------------------------------------------------------------------------------------------------

--              Addendum Commands:
--              Shorthand versions for each strategem type that uses the version appropriate for
--              the current Arts.
--                                          Light Arts                    Dark Arts
--                                          ----------                  ---------
--                gs c scholar light          Light Arts/Addendum
--              gs c scholar dark                                       Dark Arts/Addendum
--              gs c scholar cost           Penury                      Parsimony
--              gs c scholar speed          Celerity                    Alacrity
--              gs c scholar aoe            Accession                   Manifestation
--              gs c scholar addendum       Addendum: White             Addendum: Black
-------------------------------------------------------------------------------------------------------------------
function get_sets()
    mote_include_version = 2
    include('Mote-Include.lua')
end
function job_setup()
    state.Buff['Afflatus Solace'] = buffactive['Afflatus Solace'] or false
    state.Buff['Afflatus Misery'] = buffactive['Afflatus Misery'] or false
    state.RegenMode = M{['description']='Regen Mode', 'Duration', 'Potency'}
    lockstyleset = 1
end
function user_setup()
    state.OffenseMode:options('Normal', 'Acc')
    state.CastingMode:options('Normal', 'Resistant')
    state.IdleMode:options('Normal', 'DT', 'MEva')

    state.BarElement = M{['description']='BarElement', 'Barfira', 'Barblizzara', 'Baraera', 'Barstonra', 'Barthundra', 'Barwatera'}
    state.BarStatus = M{['description']='BarStatus', 'Baramnesra', 'Barvira', 'Barparalyzra', 'Barsilencera', 'Barpetra', 'Barpoisonra', 'Barblindra', 'Barsleepra'}
    state.BoostSpell = M{['description']='BoostSpell', 'Boost-STR', 'Boost-INT', 'Boost-AGI', 'Boost-VIT', 'Boost-DEX', 'Boost-MND', 'Boost-CHR'}

    state.WeaponLock = M(false, 'Weapon Lock')
    state.CP = M(false, "Capacity Points Mode")

    send_command('bind ^` input /ja "Afflatus Solace" <me>;wait 2;gs c scholar light')
    send_command('bind !` gs c scholar aoe;wait 3;input /ma "Regen IV" <me>')
    send_command('bind ^- gs c scholar light')
    send_command('bind ^= gs c scholar dark')
    send_command('bind !- gs c scholar addendum')
    send_command('bind != gs c scholar addendum')
    send_command('bind ^; gs c scholar speed')
    send_command('bind !; gs c scholar cost')
    send_command('bind ^[ input /ja "Divine Seal" <me>')
    send_command('bind ^] input /ja "Divine Caress" <me>')
    send_command('bind !o input /ma "Regen IV" <stpc>')
    send_command('bind @c gs c toggle CP')
    send_command('bind @r gs c cycle RegenMode')
    send_command('bind @w gs c toggle WeaponLock')

	send_command('bind ^numpad0 input /ma "Cure III" <p0>')
	send_command('bind ^numpad1 input /ma "Cure III" <p1>')
	send_command('bind ^numpad2 input /ma "Cure III" <p2>')
	send_command('bind ^numpad3 input /ma "Cure III" <p3>')
	send_command('bind ^numpad4 input /ma "Cure III" <p4>')
	send_command('bind ^numpad5 input /ma "Cure III" <p5>')
	send_command('bind !numpad0 input /ma "Cure V" <p0>')
	send_command('bind !numpad1 input /ma "Cure V" <p1>')
	send_command('bind !numpad2 input /ma "Cure V" <p2>')
	send_command('bind !numpad3 input /ma "Cure V" <p3>')
	send_command('bind !numpad4 input /ma "Cure V" <p4>')
	send_command('bind !numpad5 input /ma "Cure V" <p5>')
	send_command('bind !numpad6 input /ma "Curaga" <t>')
	send_command('bind !numpad7 input /ma "Curaga III" <t>')
	
    send_command('bind ^numpad7 input /ws "Black Halo" <t>')
    send_command('bind ^numpad8 input /ws "Hexa Strike" <t>')
    send_command('bind ^numpad5 input /ws "Realmrazer" <t>')
--	send_command('bind ^numpad1 input /ws "Flash Nova" <t>')
--	send_command('bind ^numpad0 input /ws "Mystic Boon" <t>')

    --[[send_command('bind 1 input /ma "Barfira" <me>')
    send_command('bind 2 input /ma "Barblizzara" <me>')
    send_command('bind 3 input /ma "Baraera" <me>')
    send_command('bind 4 input /ma "Barstonra" <me>')
    send_command('bind 5 input /ma "Barthundra" <me>')
    send_command('bind 6 input /ma "Barwatera" <me>')]]--


    select_default_macro_book()
    set_lockstyle()
end

function user_unload()
    send_command('unbind ^`')
    send_command('unbind !`')
    send_command('unbind ^-')
    send_command('unbind ^=')
    send_command('unbind !-')
    send_command('unbind !=')
    send_command('unbind ^;')
    send_command('unbind ![')
    send_command('unbind !;')
    send_command('unbind ^insert')
    send_command('unbind ^delete')
    send_command('unbind ^home')
    send_command('unbind ^end')
    send_command('unbind ^pageup')
    send_command('unbind ^pagedown')
    send_command('unbind ^[')
    send_command('unbind ^]')
    send_command('unbind !o')
    send_command('unbind @c')
    send_command('unbind @r')
    send_command('unbind @w')
    send_command('unbind ^numpad7')
    send_command('unbind ^numpad8')
    send_command('unbind ^numpad5')
    send_command('unbind ^numpad1')
    send_command('unbind ^numpad0')

    send_command('unbind #`')
    send_command('unbind #1')
    send_command('unbind #2')
    send_command('unbind #3')
    send_command('unbind #4')
    send_command('unbind #5')
    send_command('unbind #6')
    send_command('unbind #7')
    send_command('unbind #8')
    send_command('unbind #9')
    send_command('unbind #0')

    send_command('unbind !numpad0')
    send_command('unbind !numpad1')
    send_command('unbind !numpad2')
    send_command('unbind !numpad3')
    send_command('unbind !numpad4')
    send_command('unbind !numpad5')
	send_command('unbind f1')
	send_command('unbind f2')
	send_command('unbind f3')
	send_command('unbind f4')
	send_command('unbind f5')
	send_command('unbind f6')
	send_command('unbind f7')
	send_command('unbind f8')
	send_command('unbind `')
    send_command('unbind !`')
    send_command('unbind ^1')
    send_command('unbind ^2')
    send_command('unbind ^3')
    send_command('unbind ^4')
    send_command('unbind ^5')
    send_command('unbind ^6')
    send_command('unbind ^7')
    send_command('unbind ^8')
    send_command('unbind ^9')
    send_command('unbind ^0')
    send_command('unbind !1')
    send_command('unbind !2')
    send_command('unbind !3')
    send_command('unbind !4')
    send_command('unbind !5')
    send_command('unbind !6')
    send_command('unbind !7')
    send_command('unbind !8')
    send_command('unbind !9')
    send_command('unbind !0')

end

function init_gear_sets()
	------------------------------------------------------------------------------------------------
	--------------------------------------- Alaunus's  Mantle --------------------------------------
	------------------------------------------------------------------------------------------------
	
	Alaunus										= {}
	Alaunus.Cure								= { name="Alaunus's Cape", augments={'MND+20','Eva.+20 /Mag. Eva.+20','MND+10','"Cure" potency +10%','Spell interruption rate down-10%',}}
	Alaunus.Magic								= { name="Alaunus's Cape", augments={'MND+20','Mag. Acc+20 /Mag. Dmg.+20','Mag. Acc.+10','"Mag.Atk.Bns."+10','Spell interruption rate down-10%',}}
	Alaunus.FC									= { name="Alaunus's Cape", augments={'HP+60','Eva.+20 /Mag. Eva.+20','Mag. Evasion+10','"Fast Cast"+10','Phys. dmg. taken-10%',}}
	Alaunus.DW									= { name="Alaunus's Cape", augments={'DEX+20','Accuracy+20 Attack+20','Accuracy+10','"Dual Wield"+10','Phys. dmg. taken-10%',}}
	Alaunus.DA									= { name="Alaunus's Cape", augments={'DEX+20','Accuracy+20 Attack+20','Accuracy+10','"Dbl.Atk."+10','Phys. dmg. taken-10%',}}
	Alaunus.STRWS								= { name="Alaunus's Cape", augments={'STR+20','Accuracy+20 Attack+20','STR+10','Weapon skill damage +10%','Phys. dmg. taken-10%',}}
	Alaunus.MNDWS								= { name="Alaunus's Cape", augments={'MND+20','Accuracy+20 Attack+20','MND+10','Weapon skill damage +10%','Phys. dmg. taken-10%',}}
	Alaunus.Crit								= { name="Alaunus's Cape", augments={'STR+20','Accuracy+20 Attack+20','STR+10','Crit.hit rate+10','Phys. dmg. taken-10%',}}

	------------------------------------------------------------------------------------------------
	---------------------------------------- Precast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.precast.FC								= {
													ammo		="Impatiens", 
													head		="Nahtirah Hat",			--10
													body		="Inyanga Jubbah +2",		--14
													hands		={ name="Chironic Gloves", augments={'INT+3','"Fast Cast"+7','Accuracy+3 Attack+3','Mag. Acc.+12 "Mag.Atk.Bns."+12',}},		--7
													legs		="Ayanmo Cosciales +2",		--5
													feet		="Regal Pumps +1",			--7
													neck		="Cleric's Torque +1",		--5
													waist		="Witful Belt",				--3
													left_ear	="Malignance Earring",		--4
													right_ear	="Loquacious Earring",		--2
													left_ring	="Weatherspoon Ring",		--5
													right_ring	="Lebeche Ring",
													back		=Alaunus.FC}				--10
    sets.precast.FC['Enhancing Magic']			= set_combine(sets.precast.FC, {})
    sets.precast.FC['Enfeebling Magic']			= set_combine(sets.precast.FC, {})
    sets.precast.FC['Healing Magic']			= set_combine(sets.precast.FC, {legs="Ebers Pantaloons +1",back="Perimede Cape",})
    sets.precast.FC.StatusRemoval				= sets.precast.FC['Healing Magic']
    sets.precast.FC.CureNormal					= set_combine(sets.precast.FC, {
													legs		="Ebers Pantaloons +1",
													feet		="Vanya Clogs",
													right_ear	="Nourishing Earring +1",
													back		="Perimede Cape",})
    sets.precast.FC.Curaga						= sets.precast.FC.Cure
    sets.precast.FC.CureSolace					= sets.precast.FC.Cure
    sets.precast.FC.Impact						= set_combine(sets.precast.FC, {head=empty, body="Twilight Cloak"})
	
	------------------------------------------------------------------------------------------------
	------------------------------------ Weaponskill Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
    sets.precast.WS								= {
													ammo		="Floestone",
													head		="Piety Cap +3",
													body		="Piety Briault +3",
													hands		="Piety Mitts +3",
													legs		="Piety Pantaln. +3",
													feet		="Battlecast Gaiters",
													neck		="Fotia Gorget",
													left_ear	="Moonshade Earring",
													right_ear	="Ishvara Earring",
													left_ring	="Ayanmo Ring",
													right_ring	="Shukuyu Ring",
													waist		="Fotia Belt",
													back		=Alaunus.STRWS}
    sets.precast.WS['Black Halo']				= set_combine(sets.precast.WS, {
													neck		="Caro Necklace",
													waist		="Sailfi Belt +1",})
    sets.precast.WS['Hexa Strike']				= set_combine(sets.precast.WS, {right_ring="Begrudging Ring",})
    sets.precast.WS['Flash Nova']				= set_combine(sets.precast.WS, {})

	------------------------------------------------------------------------------------------------
	---------------------------------------- Midcast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.midcast.FC								= sets.precast.FC
    sets.midcast.ConserveMP						= {}
    sets.midcast.CureSolace						= {
													main		="Queller Rod",
													sub			="Sors Shield",
													ammo		="Staunch Tathlum",
													head		="Vanya Hood",
													body		="Ebers Bliaut +2",
													hands		="Theophany Mitts +3",
													legs		="Ebers Pant. +2",
													feet		="Vanya Clogs",
													neck		="Clr. Torque +1",
													waist		="Sacro Cord",
													left_ear	="Glorious Earring",
													right_ear	="Genmei Earring",
													left_ring	="Warden's Ring",
													right_ring	="Defending Ring",
													back		=Alaunus.Cure}
    sets.midcast.CureSolaceWeather				= set_combine(sets.midcast.CureSolace, {
													main		="Chatoyant Staff",
													sub			="Achaq Grip",
													waist		="Hachirin-no-Obi",
													right_ear	="Mendi. Earring",})
    sets.midcast.CureNormal						= set_combine(sets.midcast.CureSolace, {body="Theophany Briault +3"})
    sets.midcast.CureWeather					= set_combine(sets.midcast.CureSolace, {
													main		="Chatoyant Staff",
													sub			="Achaq Grip",
													body		="Theo. Bliaut +3",
													waist		="Hachirin-no-Obi",})
    sets.midcast.CuragaNormal					= set_combine(sets.midcast.CureSolace, {
													body		="Theo. Bliaut +3",
													waist		="Luminary Sash",})
    sets.midcast.CuragaWeather					= set_combine(sets.midcast.CureSolace, {
													main		="Chatoyant Staff",
													sub			="Achaq Grip",
													body		="Theo. Bliaut +3",
													waist		="Hachirin-no-Obi",
													right_ear	="Mendi. Earring",})
--	sets.midcast.CureMelee						= sets.midcast.CureSolace
    sets.midcast.StatusRemoval					= set_combine(sets.midcast.CureSolace, {
													ammo		="Impatiens",
													legs		="Piety Pantaloons +3",
													left_ear	="Malignance Earring",
													left_ring	="Weatherspoon Ring",
													back		=Alaunus.FC})
    sets.midcast.Cursna							= set_combine(sets.midcast.CureSolace, {
													main		="Gada",
													ammo		="Impatiens",
													hands		="Fanatic Gloves",
													legs		="Th. Pant. +3",
													feet		="Gende. Galosh. +1",
													neck		="Debilis Medallion",
													left_ring	="Menelaus's Ring",
													right_ring	="Haoma's Ring",
													back		=Alaunus.FC})
    sets.midcast.Erase							= set_combine(sets.midcast.StatusRemoval, {neck="Cleric's Torque +1"})
    sets.midcast['Enhancing Magic']				= {
													main		={ name="Gada", augments={'Enh. Mag. eff. dur. +5','VIT+2','"Mag.Atk.Bns."+12','DMG:+5',}},
													sub			="Ammurapi Shield",
													head		="Befouled Crown",
													body		={ name="Telchine Chas.", augments={'"Fast Cast"+4','Enh. Mag. eff. dur. +10',}},
													hands		={ name="Telchine Gloves", augments={'"Conserve MP"+4','Enh. Mag. eff. dur. +9',}},
													legs		={ name="Telchine Braconi", augments={'"Conserve MP"+1','Enh. Mag. eff. dur. +10',}},
													feet		="Theophany Duckbills +3",
													neck		="Incanter's Torque",
													waist		="Embla Sash",
													left_ear	="Mimir Earring",
													right_ear	="Andoaa Earring",
													left_ring	="Stikini Ring +1",
--													right_ring	="Stikini Ring",
													back		="Perimede Cape",}										
    sets.midcast.EnhancingDuration				= set_combine(sets.midcast['Enhancing Magic'] ,{head={ name="Telchine Cap", augments={'Mag. Evasion+25','Spell interruption rate down -7%','Enh. Mag. eff. dur. +9',}}})
    sets.midcast.Regen							= set_combine(sets.midcast.EnhancingDuration, {
													main		="Bolelabunga",
													head		="Inyanga Tiara +2",
													body		="Piety Bliaut +3",
													legs		="Th. Pant. +3",})
    sets.midcast.RegenDuration					= set_combine(sets.midcast.Regen)
    sets.midcast.Refresh						= set_combine(sets.midcast.EnhancingDuration, {
													waist		="Gishdubar Sash",
													back		="Grapevine Cape",})
    sets.midcast.Stoneskin						= set_combine(sets.midcast.EnhancingDuration, {
--													legs		="Shedir Seraweels",
--													neck		="Nodens Gorget",
													waist		="Siegel Sash",
--													right_ear	="Earthcry Earring",
})
    sets.midcast.Aquaveil						= set_combine(sets.midcast.EnhancingDuration, {
													main		="Vadose Rod",
													head		="Chironic Hat",
--													hands		="Regal Cuffs",
--													legs		="Shedir Seraweels",
													waist		="Emphatikos Rope",})
    sets.midcast.Auspice						= set_combine(sets.midcast.EnhancingDuration, {feet="Ebers Duckbills +1"})
    sets.midcast.BarElement						= set_combine(sets.midcast['Enhancing Magic'], {
													main		="Beneficus",
													head		="Ebers Cap +1",
													body		="Ebers Bliaud +2",
													hands		="Ebers Mitts +1",
													legs		="Piety Pantaloons +3",
													feet		="Ebers Duckbills +1",
													back		=Alaunus.FC})
    sets.midcast.BoostStat						= set_combine(sets.midcast['Enhancing Magic'])
    sets.midcast.Protect						= sets.midcast.EnhancingDuration
    sets.midcast.Protectra						= sets.midcast.EnhancingDuration
    sets.midcast.Shell							= sets.midcast.EnhancingDuration
    sets.midcast.Shellra						= sets.midcast.EnhancingDuration
    sets.midcast['Divine Magic']				= {
													main		="Grioavolr",
													sub			="",
													ammo		="Pemphredo Tathlum",
													head		="Inyanga Tiara +2",
													body		="Theo. Bliaut +3",
													hands		="Kaykaus Cuffs +1",
													legs		="Theophany Pantaloons +3",
													feet		="Theophany Duckbills +3",
													neck		="Incanter's Torque",
													waist		="Luminary Sash",
													left_ear	="Malignance Earring",
													right_ear	="Saxnot Earring",
													left_ring	="Weather. Ring",
													right_ring	="Metamorph Ring +1",
													back		=Alaunus.Magic}
    sets.midcast.Banish							= set_combine(sets.midcast['Divine Magic'], {
													main		="Maxentius",
													head		="Ipoca Beret",
													body		="Vedic Coat",
													hands		="Piety Mitts +3",
													neck		="Saevus Pendant +1",
													waist		="Refoccilation Stone",
													right_ear	="Friomisi Earring",
													left_ring	="Fenrir Ring +1",})
    sets.midcast.Holy							= set_combine(sets.midcast.Banish, {feet="Piety	Duckbills +3",})
    sets.midcast.MndEnfeebles					= {
													main		="Contemplator +1",
													sub			="Mephitis Grip",
													ammo		="Pemphredo Tathlum",
													head		="Inyanga Tiara +2",
													body		="Theo. Bliaut +3",
													hands		="Kaykaus Cuffs +1",
													legs		={ name="Chironic Hose", augments={'Mag. Acc.+24 "Mag.Atk.Bns."+24','"Drain" and "Aspir" potency +4','INT+4','Mag. Acc.+11',}},
													feet		="Theophany Duckbills +3",
													neck		="Incanter's Torque",
													waist		="Luminary Sash",
													left_ear	="Malignance Earring",
													right_ear	="Vor Earring",
													left_ring	="Stikini Ring +1",
													right_ring	="Kishar Ring",
													back		=Alaunus.Magic}
    sets.midcast.IntEnfeebles					= set_combine(sets.midcast.MndEnfeebles, {})
    sets.midcast['Dark Magic']					= set_combine(sets.midcast.MndEnfeebles, {
													neck		="Erra Pendant",
													waist		="Fucho-no-obi",})
	sets.midcast.Impact							= {
													main		="Kaja Rod",
													sub			="Ammurapi Shield",
													head		=empty,
													body		="Twilight Cloak",
													hands		="Inyanga Dastanas +2",
													legs		={ name="Chironic Hose", augments={'Mag. Acc.+24 "Mag.Atk.Bns."+24','"Drain" and "Aspir" potency +4','INT+4','Mag. Acc.+11',}},
													feet		="Theophany Duckbills +3",
													neck		="Sanctity Necklace",
													waist		="Refoccilation Stone",
													left_ear	="Malignance Earring",
													right_ear	="Friomisi Earring",
													left_ring	="Freke Ring",
													right_ring	="Archon Ring",
													back		=Alaunus.Magic}
    sets.midcast.Trust							= sets.precast.FC
	
	------------------------------------------------------------------------------------------------
	------------------------------------------- Misc Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.resting								= {}
    sets.idle									= {
													main		="Contemplator +1",
													sub			="Achaq Grip",
--													main		="Daybreak",
--													sub			="Genmei Shield",
													ammo		="Homiliary",
													head		="Chironic Hat",
													body		="Ebers Bliaut +2",
													hands		={ name="Chironic Gloves", augments={'Accuracy+1','MND+3','"Refresh"+2','Accuracy+15 Attack+15','Mag. Acc.+5 "Mag.Atk.Bns."+5',}},
													legs		="Assid. Pants +1",
													feet		="Chironic Slippers",
													neck		="Loricate Torque +1",
													waist		="Slipor Sash",
													left_ear	="Hearty Earring",
													right_ear	="Moonshade Earring",
													left_ring	="Stikini Ring +1",
													right_ring	="Defending Ring",
													back		=Alaunus.FC}
    sets.idle.DT								= set_combine(sets.idle, {
													head		="Ayanmo Zucchetto +2",
													body		="Ayanmo Corazza +2",
													hands		="Aya. Manopolas +2",
													legs		="Aya. Cosciales +2",
													feet		="Aya. Gambieras +2",
													left_ring	="Warden's Ring",})
    sets.idle.MEva								= set_combine(sets.idle, {
													head		="Inyanga Tiara +2",
													body		="Inyanga Jubbah +2",
													hands		="Inyan. Dastanas +2",
													legs		="Inyanga Shalwar +2",
													feet		="Inyan. Crackows +2",
													neck		="Warder's Charm +1",
													left_ring	="Inyanga Ring"})
    sets.idle.Town								= set_combine(sets.idle, {feet="Herald's Gaiters"})
    sets.idle.Weak								= sets.idle
    sets.defense.PDT							= sets.idle.DT
    sets.defense.MDT							= sets.idle.MEva
    sets.Kiting									= {feet="Herald's Gaiters"}
    sets.latent_refresh							= {waist="Fucho-no-obi"}

	------------------------------------------------------------------------------------------------
	---------------------------------------- Engaged Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.engaged								= {
													ammo		="Staunch Tathlum",
													head		="Ayanmo Zucchetto +2",
													body		="Ayanmo Corazza +2",
													hands		="Aya. Manopolas +2",
													legs		="Aya. Cosciales +2",
													feet		="Piety Duckbills +3",
													neck		="Loricate Torque +1",
													waist		="Slipor Sash",
													left_ear	="Hearty Earring",
													right_ear	="Eabani Earring",
													left_ring	="Warden's Ring",
													right_ring	="Defending Ring",
													back		=Alaunus.DA}
    -- Buff sets: Gear that needs to be worn to actively enhance a current player buff.
    sets.buff['Divine Caress']					= {hands="Ebers Mitts +1", back="Mending Cape"}
    sets.buff['Devotion']						= {head="Piety Cap +1"}
    sets.buff['Martyr']							= {head="Piety Mitts +3"}
    sets.buff['Benediction']					= {head="Piety Bliaut +3"}
    sets.buff['Afflatus Solace']				= {feet="Piety Duckbills +3"}
    sets.buff['Afflatus Misery']				= {legs="Piety Pantaloons +3"}
    sets.buff.Doom								= {
--													neck		="Nicander's Necklace",
													waist		="Gishdubar Sash",}
    sets.Obi									= {waist="Hachirin-no-Obi"}
    sets.CP										= {back="Mecisto. Mantle"}
end

-------------------------------------------------------------------------------------------------------------------
-- Job-specific hooks for standard casting events.
-------------------------------------------------------------------------------------------------------------------

-- Set eventArgs.handled to true if we don't want any automatic gear equipping to be done.
-- Set eventArgs.useMidcastGear to true if we want midcast gear equipped on precast.
function job_precast(spell, action, spellMap, eventArgs)
    if spell.english == "Paralyna" and buffactive.Paralyzed then
        -- no gear swaps if we're paralyzed, to avoid blinking while trying to remove it.
        eventArgs.handled = true
    end
end

function job_post_precast(spell, action, spellMap, eventArgs)
    if spell.name == 'Impact' then
        equip(sets.precast.FC.Impact)
    end
end

function job_post_midcast(spell, action, spellMap, eventArgs)
    -- Apply Divine Caress boosting items as highest priority over other gear, if applicable.
    if spellMap == 'StatusRemoval' and buffactive['Divine Caress'] then
        equip(sets.buff['Divine Caress'])
    end
    if spellMap == 'Banish' or spellMap == "Holy" then
        if (world.weather_element == 'Light' or world.day_element == 'Light') then
            equip(sets.Obi)
        end
    end
    if spell.skill == 'Enhancing Magic' then
        if classes.NoSkillSpells:contains(spell.english) then
            equip(sets.midcast.EnhancingDuration)
            if spellMap == 'Refresh' then
                equip(sets.midcast.Refresh)
            end
        end
        if spellMap == "Regen" and state.RegenMode.value == 'Duration' then
            equip(sets.midcast.RegenDuration)
        end
    end
end

function job_aftercast(spell, action, spellMap, eventArgs)
    if not spell.interrupted then
        if spell.english == "Sleep II" then
            send_command('@timers c "Sleep II ['..spell.target.name..']" 90 down spells/00259.png')
        elseif spell.english == "Sleep" or spell.english == "Sleepga" then -- Sleep & Sleepga Countdown --
            send_command('@timers c "Sleep ['..spell.target.name..']" 60 down spells/00253.png')
        elseif spell.english == "Repose" then
            send_command('@timers c "Repose ['..spell.target.name..']" 90 down spells/00098.png')
        end
    end
end

-------------------------------------------------------------------------------------------------------------------
-- Job-specific hooks for non-casting events.
-------------------------------------------------------------------------------------------------------------------

function job_buff_change(buff,gain)
    if buff == "doom" then
        if gain then
            equip(sets.buff.Doom)
            --send_command('@input /p Doomed.')
             disable('left_ring','right_ring','waist')
        else
            enable('left_ring','right_ring','waist')
            handle_equipping_gear(player.status)
        end
    end

end

-- Handle notifications of general user state change.
function job_state_change(stateField, newValue, oldValue)
    if state.WeaponLock.value == true then
        disable('main','sub')
    else
        enable('main','sub')
    end
end


-------------------------------------------------------------------------------------------------------------------
-- User code that supplements standard library decisions.
-------------------------------------------------------------------------------------------------------------------

-- Called for direct player commands.
function job_self_command(cmdParams, eventArgs)
    if cmdParams[1]:lower() == 'scholar' then
        handle_strategems(cmdParams)
        eventArgs.handled = true
    elseif cmdParams[1]:lower() == 'nuke' then
        handle_nuking(cmdParams)
        eventArgs.handled = true
    elseif cmdParams[1]:lower() == 'barelement' then
        send_command('@input /ma '..state.BarElement.value..' <me>')
    elseif cmdParams[1]:lower() == 'barstatus' then
        send_command('@input /ma '..state.BarStatus.value..' <me>')
    elseif cmdParams[1]:lower() == 'boostspell' then
        send_command('@input /ma '..state.BoostSpell.value..' <me>')
    end
end

-- Custom spell mapping.
function job_get_spell_map(spell, default_spell_map)
    if spell.action_type == 'Magic' then
--      if (default_spell_map == 'Cure' or default_spell_map == 'Curaga') and player.status == 'Engaged' then
--          return "CureMelee"
        if default_spell_map == 'Cure' then
            if buffactive['Afflatus Solace'] then
                if (world.weather_element == 'Light' or world.day_element == 'Light') then
                    return "CureSolaceWeather"
                else
                    return "CureSolace"
              end
            else
                if (world.weather_element == 'Light' or world.day_element == 'Light') then
                    return "CureWeather"
                else
                    return "CureNormal"
              end
            end
        elseif default_spell_map == 'Curaga' then
            if (world.weather_element == 'Light' or world.day_element == 'Light') then
                return "CuragaWeather"
            else
                return "CuragaNormal"
            end
        elseif spell.skill == "Enfeebling Magic" then
            if spell.type == "WhiteMagic" then
                return "MndEnfeebles"
            else
                return "IntEnfeebles"
            end
        end
    end
end


function customize_idle_set(idleSet)
    if player.mpp < 51 then
        idleSet = set_combine(idleSet, sets.latent_refresh)
    end
    if state.CP.current == 'on' then
        equip(sets.CP)
        disable('back')
    else
        enable('back')
    end

    return idleSet
end

-- Function to display the current relevant user state when doing an update.
-- Return true if display was handled, and you don't want the default info shown.
function display_current_job_state(eventArgs)
    local c_msg = state.CastingMode.value

    local r_msg = state.RegenMode.value

    local d_msg = 'None'
    if state.DefenseMode.value ~= 'None' then
        d_msg = state.DefenseMode.value .. state[state.DefenseMode.value .. 'DefenseMode'].value
    end

    local i_msg = state.IdleMode.value

    local msg = ''
    if state.Kiting.value then
        msg = msg .. ' Kiting: On |'
    end

    add_to_chat(060, '| Magic: ' ..string.char(31,001)..c_msg.. string.char(31,002)..  ' |'
        ..string.char(31,060).. ' Regen: ' ..string.char(31,001)..r_msg.. string.char(31,002)..  ' |'
        ..string.char(31,004).. ' Defense: ' ..string.char(31,001)..d_msg.. string.char(31,002)..  ' |'
        ..string.char(31,008).. ' Idle: ' ..string.char(31,001)..i_msg.. string.char(31,002)..  ' |'
        ..string.char(31,002)..msg)

    eventArgs.handled = true
end

-------------------------------------------------------------------------------------------------------------------
-- Utility functions specific to this job.
-------------------------------------------------------------------------------------------------------------------

-- General handling of strategems in an Arts-agnostic way.
-- Format: gs c scholar <strategem>
function handle_strategems(cmdParams)
    -- cmdParams[1] == 'scholar'
    -- cmdParams[2] == strategem to use

    if not cmdParams[2] then
        add_to_chat(123,'Error: No strategem command given.')
        return
    end
    local strategem = cmdParams[2]:lower()

    if strategem == 'light' then
        if buffactive['light arts'] then
            send_command('input /ja "Addendum: White" <me>')
        elseif buffactive['addendum: white'] then
            add_to_chat(122,'Error: Addendum: White is already active.')
        else
            send_command('input /ja "Light Arts" <me>')
        end
    elseif strategem == 'dark' then
        if buffactive['dark arts'] then
            send_command('input /ja "Addendum: Black" <me>')
        elseif buffactive['addendum: black'] then
            add_to_chat(122,'Error: Addendum: Black is already active.')
        else
            send_command('input /ja "Dark Arts" <me>')
        end
    elseif buffactive['light arts'] or buffactive['addendum: white'] then
        if strategem == 'cost' then
            send_command('input /ja Penury <me>')
        elseif strategem == 'speed' then
            send_command('input /ja Celerity <me>')
        elseif strategem == 'aoe' then
            send_command('input /ja Accession <me>')
        elseif strategem == 'addendum' then
            send_command('input /ja "Addendum: White" <me>')
        else
            add_to_chat(123,'Error: Unknown strategem ['..strategem..']')
        end
    elseif buffactive['dark arts']  or buffactive['addendum: black'] then
        if strategem == 'cost' then
            send_command('input /ja Parsimony <me>')
        elseif strategem == 'speed' then
            send_command('input /ja Alacrity <me>')
        elseif strategem == 'aoe' then
            send_command('input /ja Manifestation <me>')
        elseif strategem == 'addendum' then
            send_command('input /ja "Addendum: Black" <me>')
        else
            add_to_chat(123,'Error: Unknown strategem ['..strategem..']')
        end
    else
        add_to_chat(123,'No arts has been activated yet.')
    end
end

-- Select default macro book on initial load or subjob change.
function select_default_macro_book()
    -- Default macro set/book
    set_macro_page(1, 1)
end

function set_lockstyle()
    send_command('wait 2; input /lockstyleset ' .. lockstyleset)
end
