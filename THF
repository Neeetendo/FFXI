--[[ Skillchains
Exen > Rudra > Mandalic > Exen > - light
Exen > Rudra > Evis > Rudra > - dark
--]]

function get_sets()
    mote_include_version = 2
    include('Mote-Include.lua')
    include('organizer-lib')
end

function job_setup()
    determine_haste_group()
	send_command('gs enable all')
    include('Mote-TreasureHunter')
    state.Buff['Sneak Attack'] = buffactive['sneak attack'] or false
    state.Buff['Trick Attack'] = buffactive['trick attack'] or false
    state.Buff['Feint'] = buffactive['feint'] or false
    state.CapacityMode = M(false, 'Capacity Point Mantle')
    info.default_ja_ids = S{35, 204}
    info.default_u_ja_ids = S{201, 202, 203, 205, 207}
end

function user_setup()
    state.OffenseMode:options('Normal', 'Acc', 'AccExtreme')
    state.HybridMode:options('Normal')
    state.RangedMode:options('Normal', 'Acc')
    state.WeaponskillMode:options('Normal', 'Acc')
    state.IdleMode:options('Normal', 'Regain')
    state.RestingMode:options('Normal')
    state.PhysicalDefenseMode:options('PDT')
    state.MagicalDefenseMode:options('MDT')
    state.RangedMode:options('Normal')

	send_command('bind !` gs c cycle treasuremode')
	send_command('bind f2 ws Rudra\'s Storm')
	send_command('bind f3 ws Evisceration')
	send_command('bind f4 ws Mandalic Stab')
	send_command('bind f5 ws Exenterator')
	send_command('bind f6 ws SharkBite')
	send_command('bind f7 ws AeolianEdge')
	send_command('bind ` input /tulfaire')

    select_default_macro_book()
	set_lockstyle()
end

function file_unload()
	send_command('unbind f1')
	send_command('unbind f2')
	send_command('unbind f3')
	send_command('unbind f4')
	send_command('unbind f5')
	send_command('unbind f6')
	send_command('unbind f7')
	send_command('unbind f8')
	send_command('unbind `')
end

function init_gear_sets()
	------------------------------------------------------------------------------------------------
	------------------------------------- Toutatis's Cape ------------------------------------------
	------------------------------------------------------------------------------------------------

	Toutatis									= {}
    Toutatis.TP									= { name="Toutatis's Cape", augments={'DEX+20','Accuracy+20 Attack+20','Accuracy+10','"Store TP"+10','Phys. dmg. taken-10%',}}
    Toutatis.DEXWS								= { name="Toutatis's Cape", augments={'DEX+20','Accuracy+20 Attack+20','DEX+10','Weapon skill damage +10%',}}
	Toutatis.AGIWS								= { name="Toutatis's Cape", augments={'AGI+20','Accuracy+20 Attack+20','AGI+10','"Dbl.Atk."+10',}}
	Toutatis.Crit								= { name="Toutatis's Cape", augments={'DEX+20','Accuracy+20 Attack+20','Crit.hit rate+10',}}
	Toutatis.Magic								= { name="Toutatis's Cape", augments={'INT+20','Mag. Acc+20 /Mag. Dmg.+20','"Mag.Atk.Bns."+10',}}
	Toutatis.FastCast							= {}

	------------------------------------------------------------------------------------------------
	-------------------------------------- Utility Sets --------------------------------------------
	------------------------------------------------------------------------------------------------	

    sets.TreasureHunter							= {
													head		="Volte Cap",
													hands		="Plunderer's Armlets +1",
													legs		="Volte Hose",
													feet		="Skulker's Poulaines +1",
													waist		="Chaac Belt"}
    sets.CapacityMantle							= {back="Mecistopins Mantle"}

	------------------------------------------------------------------------------------------------
	------------------------------------ Job Abilities Sets ----------------------------------------
	------------------------------------------------------------------------------------------------

    sets.buff['Sneak Attack']					= {}
    sets.buff['Trick Attack']					= {}
    sets.precast.JA['Collaborator']				= {head="Skulker's Bonnet +1"}
    sets.precast.JA['Accomplice']				= {head="Skulker's Bonnet +1"}
    sets.precast.JA['Flee']						= {feet="Pillager's Poulaines +1"}
--	sets.precast.JA['Hide']						= {body"Pillager's Vest +1"}
    sets.precast.JA['Conspirator']				= {body="Skulker's Vest +1"}
    sets.precast.JA['Steal']					= {ammo="Barathrum",head="Plunderer's Bonnet +3",feet="Pillager's Poulaines +3"}
    sets.precast.JA['Despoil']					= {ammo="Barathrum",legs="Skulker's Culottes +1",feet="Skulker's Poulaines +1"}
    sets.precast.JA['Perfect Dodge']			= {hands="Plunderer's Armlets +1"}
    sets.precast.JA['Feint']					= {hands="Plunderer's Armlets +1",legs="Plunderer's Culottes +3"}
--	sets.precast.JA['Sneak Attack']				= sets.buff['Sneak Attack']
--	sets.precast.JA['Trick Attack']				= sets.buff['Trick Attack']
	sets.precast.JA['Mug']						= {
													ammo		="C. Palug Stone",
													head		="",
													body		="Mummu Jacket +2",
													hands		="Mummu Wrists +2",
													legs		="Mummu Kecks +2",
													feet		="Mummu Gamash. +2",
													neck		="Asn. Gorget +2",
													waist		="Flume Belt +1",
													left_ear	="Sherida Earring",
													right_ear	="Infused Earring",
													left_ring	="Mummu Ring",
													right_ring	="Ilabrat Ring",
													back		=Toutatis.TP}
    sets.precast.Waltz							= {}
    sets.precast.Step							= {}
    sets.precast.Flourish1						= sets.TreasureHunter
    sets.precast.JA.Provoke						= sets.TreasureHunter
	
	------------------------------------------------------------------------------------------------
	---------------------------------------- Idle Sets ---------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.idle									= {
													ammo		="Staunch Tathlum +1",
													head		="Turms Cap +1",
													body		="Turms Harness +1",
													hands		="Turms Mittens +1",
													legs		="Turms Subligar +1",
													feet		="Turms Leggings +1",
													neck		="Bathy Choker +1",
													waist		="Flume Belt +1",
													left_ear	="Odnowa Earring +1",
													right_ear	="Infused Earring",
													left_ring	="Paguroidea Ring",
													right_ring	="Chirich Ring +1",
													back		="Reiki Cloak"}	
	sets.idle.Town								= set_combine(sets.idle, {feet="Jute Boots +1"})
	sets.idle.Regain							= set_combine(sets.idle, {head="Turms Cap +1",left_ring="Roller's Ring"})
	sets.idle.Regen								= sets.idle
	sets.idle.Weak								= sets.idle

	------------------------------------------------------------------------------------------------
	---------------------------------------- Precast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
    sets.precast.FC								= {
													ammo		="Sapience Orb", --2
													head		=HerculeanHead.FC, --14
													body		="Taeon Tabard", --9
													hands		="Leyline Gloves", --8
													legs		=HerculeanLegs.FC, --
													feet		=HerculeanFeet.FC, --4
													neck		="Baetyl Pendant", --4
													waist		="Kasiri Belt",
													left_ear	="Loquacious Earring", --2
													right_ear	="Etiolation Earring", --2
													left_ring	="Weather. Ring", --5
													right_ring	="Evanescence Ring",
													back		=Toutatis.FastCast}
    sets.precast.FC.Utsusemi					= set_combine(sets.precast.FC, {neck="Magoraga Beads"})
    sets.precast.RA								= {}

	------------------------------------------------------------------------------------------------
	---------------------------------------- Midcast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
	sets.midcast.FastRecast						= sets.precast.FC
	sets.midcast['Blue Magic']					= sets.TreasureHunter
	sets.midcast['Poisonga']					= sets.TreasureHunter
	sets.midcast.Utsusemi						= sets.precast.FC
    sets.midcast.RA								= {}
	sets.midcast.RA.Acc							= sets.midcast.RA
	sets.midcast.RA.TH							= set_combine(sets.midcast.RA, set.TreasureHunter)

	------------------------------------------------------------------------------------------------
	---------------------------------------- Engaged Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

	sets.engaged								= {
													ammo		="Ginsen",
													head		=HerculeanHead.DW,
													body		="Adhemar Jacket +1",
													hands		="Floral Gauntlets",
													legs		="Pillager's Culottes +3",
													feet		="Taeon Boots",
													neck		="Asn. Gorget +2",
													waist		="Reiki Yotai",
													left_ear	="Eabani Earring",
													right_ear	="Suppanomimi",
													left_ring	="Gere Ring",
													right_ring	="Hetairoi Ring",
													back		=Toutatis.TP}
	sets.engaged.Acc							= set_combine(sets.engaged, {})
	sets.engaged.AccExtreme						= set_combine(sets.engaged.Acc, {})
	
	sets.engaged.MidHaste						= set_combine(sets.engaged, {
													head		="Adhemar Bonnet +1",
													hands		="Adhemar Wristbands +1",
													left_ear	="Sherida Earring",})
	sets.engaged.Acc.MidHaste					= set_combine(sets.engaged.MidHaste, {
													body		="Plunderer's Vest +3",})
	sets.engaged.AccExtreme.MidHaste			= set_combine(sets.engaged.Acc.MidHaste, {
													ammo		="Yamarang",
													head		="Malignance Chapeau",
													body		="Malignance Tabard",
													hands		="Malignance Gloves",
													legs		="Malignance Tights",
													left_ear	="Odnowa Earring +1",
													right_ring	="Moonlight Ring"})
	
	sets.engaged.MaxHaste						= set_combine(sets.engaged.MidHaste, {
													feet		="Plunderer's Poulaines +3",
													right_ear	="Dedition Earring",
													waist		="Windbuffet Belt +1",})
	sets.engaged.Acc.MaxHaste					= set_combine(sets.engaged.MaxHaste, {
													body		="Plunderer's Vest +3",
													waist		="Reiki Yotai"})
	sets.engaged.AccExtreme.MaxHaste			= set_combine(sets.engaged.Acc.MaxHaste, {
													ammo		="Yamarang",
													head		="Malignance Chapeau",
													body		="Malignance Tabard",
													hands		="Malignance Gloves",
													legs		="Malignance Tights",
													feet		="Malignance Boots",
													left_ear	="Odnowa Earring +1",
													right_ring	="Moonlight Ring"})
	sets.engaged.Hybrid							= {}

	------------------------------------------------------------------------------------------------
	------------------------------------ Weaponskill Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
	-- Dagger
    sets.precast.WS								= {
													ammo		="Cath Palug Stone",
													head		="Pillager's Bonnet +3",
													body		=HerculeanBody.WS,
													hands		="Meghanada Gloves +2",
													legs		="Plunderer's Culottes +3",
													feet		=HerculeanFeet.WS,
													neck		="Asn. Gorget +2",
													waist		="Grunfeld Rope",
													left_ear	="Moonshade Earring",
													right_ear	="Ishvara Earring",
													left_ring	="Ilabrat Ring",
													right_ring	="Regal Ring",
													back		=Toutatis.DEXWS,}
    sets.precast.WS.Acc							= set_combine(sets.precast.WS, {})
	
    sets.precast.WS['Rudra\'s Storm']			= set_combine(sets.precast.WS)
    sets.precast.WS['Rudra\'s Storm'].Acc		= set_combine(sets.precast.WS)
    sets.precast.WS['Rudra\'s Storm'].SA		= set_combine(sets.precast.WS, {ammo="Yetshila +1",body="Plunderer's Vest +3"})
    sets.precast.WS['Rudra\'s Storm'].TA		= set_combine(sets.precast.WS, {ammo="Yetshila +1",body="Plunderer's Vest +3"})
    sets.precast.WS['Rudra\'s Storm'].SATA		= set_combine(sets.precast.WS, {ammo="Yetshila +1",body="Plunderer's Vest +3"})
    sets.precast.WS['Shark Bite']				= set_combine(sets.precast.WS)
    sets.precast.WS['Shark Bite'].Acc			= set_combine(sets.precast.WS)
    sets.precast.WS['Shark Bite'].SA			= set_combine(sets.precast.WS, {ammo="Yetshila +1"})
    sets.precast.WS['Shark Bite'].TA			= set_combine(sets.precast.WS, {ammo="Yetshila +1"})
    sets.precast.WS['Shark Bite'].SATA			= set_combine(sets.precast.WS, {ammo="Yetshila +1"})
    sets.precast.WS['Mandalic Stab']			= set_combine(sets.precast.WS)
    sets.precast.WS['Mandalic Stab'].Acc		= set_combine(sets.precast.WS)
    sets.precast.WS['Mandalic Stab'].SA			= set_combine(sets.precast.WS, {ammo="Yetshila +1"})
    sets.precast.WS['Mandalic Stab'].TA			= set_combine(sets.precast.WS, {ammo="Yetshila +1"})
    sets.precast.WS['Mandalic Stab'].SATA		= set_combine(sets.precast.WS, {ammo="Yetshila +1"})
    sets.precast.WS['Evisceration']				= set_combine(sets.precast.WS, {
													ammo		="Yetshila +1",
													head		="Adhemar Bonnet +1",
													body		="Plunderer's Vest +3",
													hands		="Mummu Wrists +2",
													legs		="Pill. Culottes +3",
													feet		="Adhe. Gamashes +1",
													neck		="Fotia Gorget",
													waist		="Fotia Belt",
													left_ear	="Sherida Earring",
													right_ear	="Odr Earring",
													right_ring	="Begrudging Ring",
													back		=Toutatis.Crit})
    sets.precast.WS['Evisceration'].Acc			= set_combine(sets.precast.WS['Evisceration'])
    sets.precast.WS['Evisceration'].SA			= set_combine(sets.precast.WS['Evisceration'])
    sets.precast.WS['Evisceration'].TA			= set_combine(sets.precast.WS['Evisceration'])
    sets.precast.WS['Evisceration'].SATA		= set_combine(sets.precast.WS['Evisceration'])
    sets.precast.WS['Exenterator']				= set_combine(sets.precast.WS, {
													ammo		="Seething Bomblet +1",
													head		="Plunderer's Bonnet +3",
													body		="Plunderer's Vest +3",
													hands		="Mummu Wrists +2",
													legs		="Plunderer's Culottes +2",
													feet		="Plunderer's Poulaines +3",
													neck		="Fotia Gorget",
													waist		="Fotia Belt",
													left_ear	="Brutal Earring",
													right_ear	="Telos Earring",
													back		=Toutatis.AGIWS})
    sets.precast.WS['Exenterator'].Acc			= set_combine(sets.precast.WS['Exenterator'])
    sets.precast.WS['Exenterator'].SA			= set_combine(sets.precast.WS['Exenterator'])
    sets.precast.WS['Exenterator'].TA			= set_combine(sets.precast.WS['Exenterator'])
    sets.precast.WS['Exenterator'].SATA			= set_combine(sets.precast.WS['Exenterator'])
	sets.precast.WS['Aeolian Edge']				= {
													ammo		="Seeth. Bomblet +1",
													head		=HerculeanHead.WS,
													body		=HerculeanBody.MAB,
													hands		=HerculeanHands.WS,
													legs		=HerculeanLegs.WS,
													feet		=HerculeanFeet.MAB,
													neck		="Baetyl Pendant",
													waist		="Eschan Stone",
													left_ear	="Friomisi Earring",
													right_ear	="Moonshade Earring",
													left_ring	="Dingir Ring",
													right_ring	="Shiva Ring +1",
													back		=Toutatis.DEXWS}
	
	-- Sword
    sets.precast.WS['Savage Blade']				= set_combine(sets.precast.WS, {
													ammo		="Seething Bomblet +1",
													waist		="Sailfi Belt +1",
													left_ring	="Gere Ring"})
    sets.precast.WS['Savage Blade'].Acc			= set_combine(sets.precast.WS['Savage Blade'], {})
	------------------------------------------------------------------------------------------------
	------------------------------------------- Misc Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

	sets.resting								= {}
	sets.defense.Evasion						= {}
	sets.defense.PDT							= {
													ammo		="Staunch Tathlum +1",
													head		="Malignance Chapeau",
													body		="Malignance Tabard",
													hands		="Malignance Gloves",
													legs		="Malignance Tights",
													feet		="Malignance Boots",
													left_ear	="Odnowa Earring +1",
													right_ear	="Eabani Earring",
													left_ring	="Gelatinous Ring +1",
													right_ring	="Defending Ring",
													neck		="Unmoving Collar +1",
													waist		="Flume Belt +1",
													back		="Shadow Mantle",}
	sets.defense.MDT							= set_combine(sets.defense.PDT, {
													ammo		="Yamarang",
													feet		="Ahosi Leggings",
													neck		="Warder's Charm +1",
													left_ring	="Shadow Ring",
													back		="Reiki Cloak"})
	sets.Kiting									= {feet="Jute Boots +1"}
	sets.buff.Doom								= {neck="Nicander's Necklance",waist="Gishdubar Sash"}
	sets.doom									= {
													neck		="Nicander's Necklace",
													waist		="Gishdubar Sash",
													left_ring	={name="Eshmun's Ring", bag="wardrobe1"},
													right_ring	={name="Eshmun's Ring", bag="wardrobe4"}}
end

function job_precast(spell, action, spellMap, eventArgs)
	if state.Buff[spell.english] ~= nil then
		state.Buff[spell.english] = true
	end
end

function job_post_precast(spell, action, spellMap, eventArgs)
	if spell.english == 'Cyclone' and state.TreasureMode.value ~= 'None' then
		equip(sets.TreasureHunter)
	elseif spell.english=='Sneak Attack' or spell.english=='Trick Attack' or spell.type == 'WeaponSkill' then
		if state.TreasureMode.value == 'SATA' or state.TreasureMode.value == 'Fulltime' then
			equip(sets.TreasureHunter)
		end
	end
	if spell.type == 'WeaponSkill' then
		if state.CapacityMode.value then
			equip(sets.CapacityMantle)
		end
	end
    if spell.english == "Rudra\'s Storm" and player.tp > 2750 then
        equip({left_ear="Sherida Earring",})
    end
end

function job_post_midcast(spell, action, spellMap, eventArgs)
	if state.TreasureMode.value ~= 'None' and spell.action_type == 'Ranged Attack' then
		equip(sets.TreasureHunter)
	end
end

function job_aftercast(spell, action, spellMap, eventArgs)
	if state.Buff[spell.english] ~= nil then
		state.Buff[spell.english] = not spell.interrupted or buffactive[spell.english]
	end
	if spell.type == 'WeaponSkill' and not spell.interrupted then
		state.Buff['Sneak Attack'] = false
		state.Buff['Trick Attack'] = false
		state.Buff['Feint'] = false
	end
end

function job_post_aftercast(spell, action, spellMap, eventArgs)
	check_buff('Feint', eventArgs)
end

function get_custom_wsmode(spell, spellMap, defaut_wsmode)
	local wsmode

	if state.Buff['Sneak Attack'] then
		wsmode = 'SA'
	end
	if state.Buff['Trick Attack'] then
		wsmode = (wsmode or '') .. 'TA'
	end
	return wsmode
end

function job_handle_equipping_gear(playerStatus, eventArgs)
	check_range_lock()
	check_buff('Sneak Attack', eventArgs)
	check_buff('Trick Attack', eventArgs)
end

function customize_idle_set(idleSet)
	if player.hpp < 80 then
		idleSet = set_combine(idleSet, sets.idle.Regen)
	end
	return idleSet
end

function customize_melee_set(meleeSet)
	if state.TreasureMode.value == 'Fulltime' then
		meleeSet = set_combine(meleeSet, sets.TreasureHunter)
	end
	if state.CapacityMode.value then
		meleeSet = set_combine(meleeSet, sets.CapacityMantle)
	end
	return meleeSet
end

function job_buff_change(buff, gain)
	if S{'haste','march','mighty guard','embrava','haste samba','geo-haste','indi-haste'}:contains(buff:lower()) then
		determine_haste_group()
		handle_equipping_gear(player.status)
	end
	if state.Buff[buff] ~= nil then
		state.Buff[buff] = gain
		if not midaction() then
			handle_equipping_gear(player.status)
		end
	end
	if state.Buff[buff] ~= nil then
		if not midaction() then

			handle_equipping_gear(player.status)
		end
	end
	if buff == "doom" then
		if gain then		   
			equip(sets.buff.Doom)
			send_command('@input /p Doomed.')
			disable('left_ring','right_ring','waist','neck')
		else
			enable('left_ring','right_ring','waist','neck')
			handle_equipping_gear(player.status)
		end
	end
end

function job_self_command(cmdParams, eventArgs)
	command = cmdParams[1]:lower()
	command = cmdParams[1]:lower()
	command2 = cmdParams[2]
end

function job_update(cmdParams, eventArgs)
	th_update(cmdParams, eventArgs)
	determine_haste_group()
end

function display_current_job_state(eventArgs)
	local msg = 'THFシ'

	msg = msg .. ' :: '
	msg = msg .. '[Idle: '..state.IdleMode.current.. ']'
	msg = msg .. ' '
	msg = msg .. '[Offense: '..state.OffenseMode.current..']'
	msg = msg .. ' '
	msg = msg .. '[WS: '..state.WeaponskillMode.current .. ']'
	msg = msg .. ' '
	msg = msg .. '[TH: ' .. state.TreasureMode.value .. ']'
	msg = msg .. ' '
	if state.DefenseMode.value ~= 'None' then
		msg = msg .. '['..state.DefenseMode.value .. ']'
	end
	
	add_to_chat(060, msg)
	eventArgs.handled = true
end

function check_buff(buff_name, eventArgs)
	if state.Buff[buff_name] then
		equip(sets.buff[buff_name] or {})
		if state.TreasureMode.value == 'SATA' or state.TreasureMode.value == 'Fulltime' then
		equip(sets.TreasureHunter)
		end
		eventArgs.handled = true
	end
end

function determine_haste_group()
	classes.CustomMeleeGroups:clear()
		-- buffactive[33] = Haste/Haste II 15%/30%
		-- buffactive[604] = Mighty Guard 15%
		-- buffactive[580] = Indi/Geo-Haste 29.9%/35.4%/40.9%
		-- buffactive[370] = Haste Samba 10%(Main) 5%(Sub)
		-- buffactive[228] = Embrava 30%
		-- Victory March +3/+4/+5 :: 14%/15.6%/17.1%
		-- Advancing March +3/+4/+5 :: 10.9%/12.5%/14%
	if (buffactive[580] and ( buffactive.march or buffactive[33] or buffactive.embrava or buffactive[604])) or  --Indi/Geo-Haste + Anything
		(buffactive.embrava and (buffactive.march or buffactive[33] or buffactive[604])) or  --Embrava + anything
		(buffactive.march == 2 and (buffactive[33] or buffactive[604])) or  --March x2 + Anything
		(buffactive[33] and buffactive[604] and buffactive.march) then --Haste + Mighty Guard + March(s)
			classes.CustomMeleeGroups:append('MaxHaste')
	elseif ((buffactive[604] or buffactive[33]) and buffactive['haste samba'] and buffactive.march == 1) or --Mighty Guard/Haste + Samba + March
		(buffactive.march == 2 and buffactive['haste samba']) or
		(buffactive[580] and buffactive['haste samba']) then 
            classes.CustomMeleeGroups:append('MaxHaste')
	elseif ( buffactive.march == 2 ) or --March x2
		((buffactive[33] or buffactive[604]) and buffactive.march == 1 ) or  --Mighty Guard/Haste + March
		(buffactive[580] ) or  --Indi/Geo-Haste
		(buffactive[33] and buffactive[604]) then  --Haste + Mighty Guard
			classes.CustomMeleeGroups:append('MaxHaste')
	elseif buffactive[33] or buffactive[604] or buffactive.march == 2 then
			classes.CustomMeleeGroups:append('MidHaste')
	end
end

function th_action_check(category, param)
	if category == 2 or
		(category == 3 and param == 30) or
		(category == 6 and info.default_ja_ids:contains(param)) or
		(category == 14 and info.default_u_ja_ids:contains(param))
		then return true
	end
end

function check_range_lock()
	if player.equipment.range ~= 'empty' then
		disable('range', 'ammo')
	else
		enable('range', 'ammo')
	end
end

function select_default_macro_book()
	if player.sub_job == 'DNC' then
		set_macro_page(1, 3)
	elseif player.sub_job == 'WAR' then
		set_macro_page(1, 3)
	elseif player.sub_job == 'NIN' then
		set_macro_page(1, 3)
	else
		set_macro_page(1, 3)
	end
end

function set_lockstyle()
	send_command('wait 2; input /lockstyleset 4')
end
