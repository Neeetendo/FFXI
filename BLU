function get_sets()
    mote_include_version = 2
    include('Mote-Include.lua')
    include('organizer-lib')
end

function job_setup()
    include('Mote-TreasureHunter')
	send_command('gs enable all')
	
    state.Buff['Unbridled Learning']	= buffactive['Unbridled Learning'] or false
    state.Buff['Burst Affinity']		= buffactive['Burst Affinity'] or false
    state.Buff['Chain Affinity']		= buffactive['Chain Affinity'] or false
    state.Buff.Convergence				= buffactive.Convergence or false
    state.Buff.Diffusion				= buffactive.Diffusion or false
    state.Buff.Efflux					= buffactive.Efflux or false
    state.Buff.Doom						= buffactive.Doom or false
    state.TreasureMode:set('Tag')

    info.default_ja_ids = S{35, 204}
    info.default_u_ja_ids = S{201, 202, 203, 205, 207}

    --------------------------------------
    -- Physical Spells
    --------------------------------------    
	
	blue_magic_maps					= {}
    blue_magic_maps.Physical		= S{'Bilgestorm'}
    blue_magic_maps.PhysicalAcc		= S{'Heavy Strike'}
    blue_magic_maps.PhysicalStr		= S{
					'Battle Dance','Bloodrake','Death Scissors','Dimensional Death',
					'Empty Thrash','Quadrastrike','Spinal Cleave',
					'Uppercut','Vertical Cleave','Sinker Drill'}
    blue_magic_maps.PhysicalDex		= S{
					'Amorphic Spikes','Asuran Claws','Barbed Crescent','Claw Cyclone','Disseverment',
					'Foot Kick','Frenetic Rip','Goblin Rush','Hysteric Barrage','Paralyzing Triad',
					'Seedspray','Sickle Slash','Smite of Rage','Terror Touch','Thrashing Assault',
					'Vanity Dive'}     
    blue_magic_maps.PhysicalVit		= S{
					'Body Slam','Cannonball','Delta Thrust','Glutinous Dart','Grand Slam',
					'Power Attack','Quad. Continuum','Sprout Smack','Sub-zero Smash'}
    blue_magic_maps.PhysicalAgi		= S{
					'Benthic Typhoon','Feather Storm','Helldive','Hydro Shot','Jet Stream',
					'Pinecone Bomb','Spiral Spin','Wild Oats'}
    blue_magic_maps.PhysicalInt		= S{'Mandibular Bite','Queasyshroom'}
    blue_magic_maps.PhysicalMnd		= S{'Ram Charge','Screwdriver','Tourbillion'}
    blue_magic_maps.PhysicalChr		= S{'Bludgeon'}
    blue_magic_maps.PhysicalHP		= S{'Final Sting'}

    --------------------------------------
    -- Magical Spells
    --------------------------------------
	
    blue_magic_maps.Magical			= S{
				'Blastbomb','Blazing Bound','Bomb Toss','Cursed Sphere','Dark Orb','Death Ray',
				'Droning Whirlwind','Embalming Earth','Firespit','Foul Waters','Ice Break',
				'Leafstorm','Maelstrom','Regurgitation','Rending Deluge',
				'Subduction','Tem. Upheaval','Water Bomb',
				'Searing Tempest', 'Spectral Floe', 'Scouring Spate', 'Anvil Lightning', 'Molting Plumage', 'Nectarous Deluge'}
    blue_magic_maps.MagicalMnd		= S{'Acrid Stream','Evryone. Grudge','Magic Hammer','Mind Blast'}
    blue_magic_maps.MagicalChr		= S{'Eyes On Me','Mysterious Light'}
    blue_magic_maps.MagicalVit		= S{'Thermal Pulse'}
    blue_magic_maps.MagicalDex		= S{'Charged Whisker','Gates of Hades'}            
    blue_magic_maps.MagicAccuracy	= S{
				'1000 Needles','Absolute Terror','Actinic Burst','Auroral Drape','Awful Eye',
				'Blank Gaze','Blistering Roar','Blood Drain','Blood Saber','Chaotic Eye',
				'Cimicine Discharge','Cold Wave','Corrosive Ooze','Demoralizing Roar','Digest',
				'Dream Flower','Enervation','Feather Tickle','Filamented Hold','Frightful Roar',
				'Geist Wall','Hecatomb Wave','Infrasonics','Jettatura','Light of Penance',
				'Lowing','Mind Blast','Mortal Ray','MP Drainkiss','Osmosis','Reaving Wind',
				'Sandspin','Sandspray','Sheep Song', 'Silent Storm','Soporific','Sound Blast',
				'Stinking Gas','Sub-zero Smash','Venom Shell','Voracious Trunk','Yawn'}
    blue_magic_maps.MagicDark		= S{'Blood Saber','Palling Salvo','Tenebral Crush','Osmosis','Atra. Libations','Dark Orb'}
	blue_magic_maps.MagicLight		= S{'Blinding Fulgor','Diffusion Ray','Rail Cannon','Retinal Glare','Magic Hammer'}
	blue_magic_maps.MagicEarth		= S{'Entomb'}
    blue_magic_maps.Breath			= S{
				'Bad Breath','Flying Hip Press','Frost Breath','Heat Breath',
				'Hecatomb Wave','Magnetite Cloud','Poison Breath','Radiant Breath','Self-Destruct',
				'Thunder Breath','Vapor Spray','Wind Breath'}
    blue_magic_maps.Stun			= S{
				'Blitzstrahl','Frypan','Head Butt','Sudden Lunge','Tail slap','Temporal Shift',
				'Thunderbolt','Whirl of Rage'}
    blue_magic_maps.Healing = S{'Healing Breeze','Magic Fruit','Plenilune Embrace','Pollen','Wild Carrot'}
    blue_magic_maps.SkillBasedBuff	= S{
				'Diamondhide','Magic Barrier','Metallic Body','Plasma Charge','Reactor Cool', 'Occultation'}
    blue_magic_maps.Buff			= S{
				'Amplification','Animating Wail','Barrier Tusk','Battery Charge','Carcharian Verve','Cocoon',
				'Erratic Flutter','Exuviation','Fantod','Feather Barrier','Harden Shell',
				'Memento Mori','Nat. Meditation','Orcish Counterstance','Pyric Bulwark','Refueling',
				'Regeneration','Saline Coat','Triumphant Roar','Warm-Up','Winds of Promyvion',
				'Zephyr Mantle'}
    unbridled_spells				= S{
				'Absolute Terror','Bilgestorm','Blistering Roar','Bloodrake','Carcharian Verve',
				'Droning Whirlwind','Gates of Hades','Harden Shell','Pyric Bulwark','Thunderbolt',
				'Tourbillion','Mighty Guard'}	
    determine_haste_group()
	set_lockstyle()
end

function user_setup()
    state.OffenseMode:options('Normal','MidAcc','HighAcc')
    state.HybridMode:options('Normal')
    state.WeaponskillMode:options('Normal','Acc')
    state.CastingMode:options('Normal', 'MagicBurst')
    state.IdleMode:options('Normal', 'Refresh')
	state.mainweapon = M{['description'] = 'Main Weapon'}
	state.mainweapon:options('Sequence','Club')
    state.MagicBurst = M(false, 'Magic Burst')

	send_command('bind f2 ws Savage Blade')
	send_command('bind f3 ws Chant du Cygne')
	send_command('bind f4 ws Requiescat')
	send_command('bind f5 ws Expiacion')
	send_command('bind f6 ws SanguineBlade')
	send_command('bind f7 gs c mainweapon')
	send_command('bind home gs c demring')
	
	send_command('bind !numpad1 input /ma "Magic Fruit" <p0>')
	send_command('bind !numpad2 input /ma "Magic Fruit" <p1>')
	send_command('bind !numpad3 input /ma "Magic Fruit" <p2>')
	send_command('bind !numpad4 input /ma "Magic Fruit" <p3>')
	send_command('bind !numpad5 input /ma "Magic Fruit" <p4>')
	send_command('bind !numpad6 input /ma "Magic Fruit" <p5>')
	
    update_combat_form()
    select_default_macro_book()
end

function user_unload()
	send_command('unbind f1')
	send_command('unbind f2')
	send_command('unbind f3')
	send_command('unbind f4')
	send_command('unbind f5')
	send_command('unbind f6')
	send_command('unbind f7')
	send_command('unbind f8')
	send_command('unbind !numpad1')
	send_command('unbind !numpad2')
	send_command('unbind !numpad3')
	send_command('unbind !numpad4')
	send_command('unbind !numpad5')
	send_command('unbind !numpad6')
end

function init_gear_sets()

	------------------------------------------------------------------------------------------------
	------------------------------------- Rosmerta's Cape ------------------------------------------
	------------------------------------------------------------------------------------------------
	
    Rosmerta		= {}
    Rosmerta.TP		= { name="Rosmerta's Cape", augments={'DEX+20','Accuracy+20 Attack+20','DEX+10','"Dbl.Atk."+10','Phys. dmg. taken-10%',}}
    Rosmerta.Crit	= { name="Rosmerta's Cape", augments={'DEX+20','Accuracy+20 Attack+20','Crit.hit rate+10',}}
	Rosmerta.STRWS	= { name="Rosmerta's Cape", augments={'STR+20','Accuracy+20 Attack+20','STR+10','Weapon skill damage +10%',}}
	Rosmerta.MNDWS	= { name="Rosmerta's Cape", augments={'MND+20','Accuracy+20 Attack+20','"Dbl.Atk."+10',}}
	Rosmerta.FC		= { name="Rosmerta's Cape", augments={'HP+60','Eva.+20 /Mag. Eva.+20','"Fast Cast"+10',}}
	Rosmerta.Nuke	= { name="Rosmerta's Cape", augments={'INT+20','Mag. Acc+20 /Mag. Dmg.+20','"Mag.Atk.Bns."+10',}}

	------------------------------------------------------------------------------------------------
	---------------------------------------- Utility Sets ------------------------------------------
	------------------------------------------------------------------------------------------------	

    sets.TreasureHunter				= {head=HerculeanHead.TH,waist="Chaac Belt"}
	sets.mainweapon					= {}
	sets.mainweapon.Sequence		= {
										main="Sequence",
										sub="Colada"}
	sets.mainweapon.Club			= {
										main="Nibiru Cudgel",	
										sub="Nibiru Cudgel"}

	------------------------------------------------------------------------------------------------
	---------------------------------- Job Abilities Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
    sets.precast.JA['Azure Lore']	= {hands="Luhlaza Bazubands"}
    sets.buff['Burst Affinity']		= {legs="Assimilator's Shalwar +1",feet="Hashishin Basmak +1",}
    sets.buff['Chain Affinity']		= {head="Hashishin Kavuk +1",feet="Assimilator's Charuqs +2"}
    sets.buff.Convergence			= {head="Mirage Keffiyeh +2"}
    sets.buff.Diffusion				= {feet="Luhlaza Charuqs +1"}
    sets.buff.Efflux				= {legs="Hashishin Tayt +1"}
    sets.precast.Waltz				= {}
	sets.precast.JA['Lunge']		= {
										ammo="Pemphredo Tathlum",
										head="Jhakri Coronal +2",
										neck="Sanctity Necklace",
										left_ear="Friomisi Earring",
										right_ear="Novio Earring",
										body="Jhakri Robe +2",
										hands="Jhakri Cuffs +2",
										left_ring="Shiva Ring +1",
										right_ring="Fenrir Ring +1",
										back=Rosmerta.Nuke,
										waist=gear.ElementalObi,
										legs="Amalric Slops",
										feet="Amalric Nails"}
	sets.precast.JA['Swipe']		= sets.precast.JA['Lunge']
	
	------------------------------------------------------------------------------------------------
	---------------------------------------- Idle Sets ---------------------------------------------
	------------------------------------------------------------------------------------------------
	
    sets.idle = {
		ammo="Staunch Tathlum",
		head=HerculeanHead.Refresh,
		neck="Loricate Torque +1",
		left_ear="Genmei Earring",
		right_ear="Odnowa Earring +1",
		body="Jhakri Robe +2",
		hands=HerculeanHands.Refresh,
		left_ring="Gelatinous Ring +1",
		right_ring="Defending Ring",
		back="Solemnity Cape",
		waist="Flume Belt +1",
		legs="Carmine Cuisses +1",
		feet=HerculeanFeet.Refresh}
	sets.idle.Refresh = sets.idle
	sets.idle.Town = sets.idle
	
	------------------------------------------------------------------------------------------------
	---------------------------------------- Precast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.precast.FC = {
		ammo="Impatiens",
		head="Carmine Mask +1", --14
		neck="Baetyl Pendant", --4
		left_ear="Loquacious Earring", --2
		right_ear="Etiolation Earring", --1
		body="Taeon Tabard", --7
		hands="Leyline Gloves", --8
		left_ring="Rahab Ring", --2
--		left_ring="Weatherspoon ring", --5
		right_ring="Kishar Ring", --2
		back=Rosmerta.FC, --10
		waist="Witful Belt", --3
		legs="Psycloth Lappas", --7
		feet="Carmine Greaves +1"} --8
    sets.precast.FC['Blue Magic'] = set_combine(sets.precast.FC, {body="Hashishin Mintan"})
	
	------------------------------------------------------------------------------------------------
	---------------------------------------- Midcast Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
    sets.midcast.FastRecast = {
		ammo="Impatiens",
		head="Carmine Mask +1", --14
		neck="Baetyl Pendant", --4 	
		left_ear="Loquacious Earring", --2
		right_ear="Etiolation Earring", --1
		body="Taeon Tabard", --7
		hands="Rawhide Gloves",
		left_ring="Evanescence Ring",
		right_ring="Kishar Ring", --2
		back=Rosmerta.FC, --10
		waist="Rumination Sash",
		legs="Carmine Cuisses +1",
		feet="Amalric Nails"} --8
    sets.midcast['Blue Magic'] = {}
    
    --- Midcast sets // Physical Spells
    
    sets.midcast['Blue Magic'].Physical = {
		ammo="Floestone",
		head="Jhakri Coronal +2",
		neck="Caro Necklace",
		left_ear="Zennaroi Earring",
		right_ear="Telos Earring",
		body="Jhakri Robe +2",
		hands="Jhakri Cuffs +2",
		left_ring="Rufescent Ring",
		right_ring="Ifrit Ring +1",
		back=Rosmerta.STRWS,
		waist="Prosilio Belt +1",
		legs="Ayanmo Cosciales +2",
		feet="Ayanmo Charuqs +2"}
    sets.midcast['Blue Magic'].PhysicalAcc = {}
    sets.midcast['Blue Magic'].PhysicalStr = set_combine(sets.midcast['Blue Magic'].Physical,{})
    sets.midcast['Blue Magic'].PhysicalDex = set_combine(sets.midcast['Blue Magic'].Physical,{
		ammo="Jukukik Feather",
		left_ear="Dominance Earring +1",
		left_ring="Ilabrat Ring",
		right_ring="Ramuh Ring +1",
		back=Rosmerta.Crit,
		waist="Grunfeld Rope",})
    sets.midcast['Blue Magic'].PhysicalVit = set_combine(sets.midcast['Blue Magic'].Physical,{})
    sets.midcast['Blue Magic'].PhysicalAgi = set_combine(sets.midcast['Blue Magic'].Physical,{})
    sets.midcast['Blue Magic'].PhysicalInt = set_combine(sets.midcast['Blue Magic'].Physical,{})		
    sets.midcast['Blue Magic'].PhysicalMnd = set_combine(sets.midcast['Blue Magic'].Physical,{})		
    sets.midcast['Blue Magic'].PhysicalChr = set_combine(sets.midcast['Blue Magic'].Physical,{})
    sets.midcast['Blue Magic'].PhysicalHP = set_combine(sets.midcast['Blue Magic'].Physical)

    --- Midcast sets // Magical Spells 
    
    sets.midcast['Blue Magic'].Magical = {
		ammo="Pemphredo Tathlum",
		head="Jhakri Coronal +2",
		neck="Baetyl Pendant",
		left_ear="Friomisi Earring",
		right_ear="Novio Earring",
		body="Jhakri Robe +2",
		hands="Jhakri Cuffs +2",
		left_ring="Shiva Ring +1",
		right_ring="Fenrir Ring +1",
        back=Rosmerta.Nuke,
		waist="Eschan Stone",
		legs="Amalric Slops",
		feet="Amalric Nails"}
    sets.midcast['Blue Magic'].Magical.MagicBurst = set_combine(sets.midcast['Blue Magic'].Magical,{
		right_ear="Static Earring",
		body="Samnuha Coat",
		hands="Amalric Gages",
		right_ring="Mujin band",
		back="Seshaw cape"})
    sets.midcast['Blue Magic'].Magical.Resistant = set_combine(sets.midcast['Blue Magic'].Magical,{})    
    sets.midcast['Blue Magic'].MagicalMnd = set_combine(sets.midcast['Blue Magic'].Magical,{})
    sets.midcast['Blue Magic'].MagicalChr = set_combine(sets.midcast['Blue Magic'].Magical,{})
    sets.midcast['Blue Magic'].MagicalVit = set_combine(sets.midcast['Blue Magic'].Magical,{})
    sets.midcast['Blue Magic'].MagicalDex = set_combine(sets.midcast['Blue Magic'].Magical,{})
    sets.midcast['Blue Magic'].MagicAccuracy = {
		ammo="Pemphredo Tathlum",
		head="Carmine Mask +1",
		neck="Incanter's Torque",
		left_ear="Dignitary's Earring",
		right_ear="Gwati Earring",
		body="Jhakri Robe +2",
		hands="Jhakri Cuffs +2",
		left_ring="Stikini Ring",
		right_ring="Weatherspoon Ring",
        back=Rosmerta.Nuke,
		waist="Eschan Stone",
		legs="Ayanmo Cosciales +2",
		feet="Jhakri Pigaches +2"}
	sets.midcast['Blue Magic'].MagicDark = set_combine(sets.midcast['Blue Magic'].Magical,{head="Pixie Hairpin +1",right_ring="Archon Ring"})
	sets.midcast['Blue Magic'].MagicLight = set_combine(sets.midcast['Blue Magic'].Magical,{right_ring="Weatherspoon ring"})
	sets.midcast['Blue Magic'].MagicEarth = set_combine(sets.midcast['Blue Magic'].Magical,{})
    sets.midcast['Blue Magic'].Breath = set_combine(sets.midcast.FastRecast,{})
    sets.midcast['Blue Magic'].Stun = set_combine(sets.midcast['Blue Magic'].MagicAccuracy,{})   
    sets.midcast['Blue Magic']['White Wind'] = {
		ammo="Charitoni Sling",
		head="Rawhide Mask",
		neck="Dualism Collar +1",
		left_ear="Odnowa Earring +1",
		right_ear="Etiolation Earring",
		body="Assimilator's Jubbah +2",
		hands="Telchine Gloves", 
		left_ring="Meridian Ring",
		right_ring="Bomb Queen Ring",
		back="Reiki Cloak",
		waist="Eschan Stone",
		legs="Assimilator's Shalwar +1",
		feet="Assimilator's Charuqs +2"}
    sets.midcast['Blue Magic'].Healing = sets.midcast.Cure
    sets.midcast['Blue Magic'].SkillBasedBuff = set_combine(sets.midcast.FastRecast,{
		ammo="Mavi Tathlum",
        head="Luhlaza Keffiyeh +1",
		neck="Incanter's Torque",
        body="Assimilator's Jubbah +2",
		hands="Rawhide Gloves",
		left_ring="Stikini Ring",	
        back="Cornflower Cape",
		legs="Hashishin Tayt +1",
		feet="Luhlaza Charuqs +1"})
    sets.midcast['Blue Magic'].Buff = set_combine(sets.midcast.FastRecast,{})
	sets.midcast.Cure = {
		ammo="Hydrocera",
		head="Jhakri Coronal +2",
		left_ear="Mendicant's Earring",
		right_ear="Handler's Earring +1",
		body="Vrikodara Jupon",
		hands=TelchineHands.Enhance,
		left_ring="Sirona's Ring",
		right_ring="Rufescent Ring",
		back="Tempered Cape +1",
		waist="Pythia Sash +1",
		legs="Gyve Trousers",
		feet="Medium's Sabots"}
    sets.midcast.self_healing = set_combine(sets.midcast.Cure,{
		neck="Phalaina locket",
		left_ring="Asklepian Ring",
		right_ring="Kunaji Ring",
		waist="Gishdubar sash"})	
	sets.midcast['Diaga'] = {head=HerculeanHead.TH,waist="Chaac Belt"}
	sets.midcast['Flash'] = sets.midcast['Diaga']
	sets.midcast['Glutinous Dart'] = set_combine(sets.midcast['Blue Magic'].MagicAccuracy, sets.midcast['Diaga'])
	sets.midcast['Elemental Magic'] = sets.midcast['Blue Magic'].Magical
	sets.midcast['Enhancing Magic'] = {}
	sets.midcast.Phalanx = set_combine(sets.midcast['Enhancing Magic'], {})	
    sets.midcast.Refresh = set_combine(sets.midcast['Enhancing Magic'],{head="Amalric Coif",back="Grapevine Cape",waist="Gishdubar sash"})
    sets.midcast.Aquaveil = set_combine(sets.midcast['Enhancing Magic'],{head="Amalric Coif"})
	sets.midcast['Battery Charge'] = sets.midcast.Refresh
	sets.midcast['Carcharian Verve'] = sets.midcast.Aquaveil

	------------------------------------------------------------------------------------------------
	---------------------------------------- Engaged Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.engaged = {
		ammo="Ginsen",
		head="Adhemar Bonnet +1",
		neck="Ainia Collar",
		left_ear="Eabani Earring",
		right_ear="Suppanomimi",
		body="Adhemar Jacket +1",
		hands=AdhemarHands.A,
		left_ring="Epona's Ring",
		right_ring="Petrov Ring",
		back=Rosmerta.TP,
		waist="Reiki Yotai",
		legs=HerculeanLegs.DW,
		feet=HerculeanFeet.DW}
    sets.engaged.MidAcc = set_combine(sets.engaged , {
		ammo="Falcon Eye",
		neck="Sanctity Necklace",})
    sets.engaged.HighAcc = set_combine(sets.engaged , {
		ammo="Falcon Eye",
		head="Dampening Tam",
		neck="Sanctity Necklace",
		left_ear="Cessance Earring",
		right_ear="Dignitary's Earring",
		hands="Leyline Gloves",
		right_ring="Ramuh Ring +1",
		waist="Kentarch Belt +1"})

    sets.engaged.MidHaste = {
		ammo="Ginsen",
		head="Adhemar Bonnet +1",
		neck="Ainia Collar",
		left_ear="Eabani Earring",
		right_ear="Suppanomimi",
		body="Adhemar Jacket +1",
		hands="Adhemar Wristbands +1",
		left_ring="Epona's Ring",
		right_ring="Petrov Ring",
		back=Rosmerta.TP,
		waist="Reiki Yotai",
		legs=HerculeanLegs.DW,
		feet=HerculeanFeet.DW}
    sets.engaged.MidAcc.HighHaste = set_combine(sets.engaged.MidHaste , {
		ammo="Falcon Eye",
		neck="Sanctity Necklace",})
	sets.engaged.HighAcc.HighHaste = set_combine(sets.engaged.MidHaste , {
		ammo="Falcon Eye",
		head="Dampening Tam",
		neck="Sanctity Necklace",
		left_ear="Cessance Earring",
		right_ear="Dignitary's Earring",
		hands="Leyline Gloves",
		right_ring="Ramuh Ring +1",
		waist="Kentarch Belt +1"})

    sets.engaged.MaxHaste = {
		ammo="Ginsen",
		head="Adhemar Bonnet +1",
		neck="Ainia Collar",
		left_ear="Cessance Earring",
		right_ear="Brutal Earring",
		body="Adhemar Jacket +1",
		hands="Adhemar Wristbands +1",
		left_ring="Epona's Ring",
		right_ring="Petrov Ring",
		back=Rosmerta.TP,
		waist="Reiki Yotai",
		legs="Samnuha Tights",
		feet=HerculeanFeet.TA}
	sets.engaged.MidAcc.MaxHaste = set_combine(sets.engaged.MaxHaste , {
		right_ear="Telos Earring",})
    sets.engaged.HighAcc.MaxHaste = set_combine(sets.engaged.MaxHaste , {
		ammo="Falcon Eye",
		head="Dampening Tam",
		neck="Sanctity Necklace",
		left_ear="Dignitary's Earring",
		right_ring="Ramuh Ring +1",}) 

	------------------------------------------------------------------------------------------------
	------------------------------------ Weaponskill Sets ------------------------------------------
	------------------------------------------------------------------------------------------------

    sets.precast.WS = {neck="Fotia Gorget",waist="Fotia Belt",}
	
	sets.CDC = {
		ammo="Jukukik Feather",
		head="Adhemar Bonnet +1",
		neck="Fotia Gorget",
		left_ear="Brutal Earring",
		right_ear="Moonshade Earring",
		body="Abnoba Kaftan",
		hands="Adhemar Wristbands +1",
		left_ring="Epona's Ring",
		right_ring="Begrudging Ring",
		back=Rosmerta.Crit,
		waist="Fotia Belt",
		legs="Samnuha Tights",
		feet="Thereoid Greaves"}
	sets.precast.WS['Chant du Cygne'] = set_combine(sets.precast.WS, sets.CDC)
	sets.precast.WS['Chant du Cygne'].Acc = set_combine(sets.CDC, {ammo="Falcon Eye",left_ear="Cessance Earring",left_ring="Ramuh Ring +1"})

	sets.Requiescat = {
		ammo="Floestone",
		head="Jhakri Coronal +2",
		neck="Fotia Gorget",
		left_ear="Brutal Earring",
		right_ear="Moonshade Earring",
		body="Jhakri Robe +2",
		hands="Jhakri Cuffs +2",
		left_ring="Epona's Ring",
		right_ring="Rufescent Ring",
		back=Rosmerta.MNDWS,
		waist="Fotia Belt",
		legs="Carmine Cuisses +1",
		feet="Jhakri Pigaches +2"}
    sets.precast.WS['Requiescat'] = set_combine(sets.precast.WS, sets.Requiescat)

	sets.Savage = {
		ammo="Floestone",
		head=HerculeanHead.WS,
		neck="Caro Necklace",
		left_ear="Moonshade Earring",
		right_ear="Ishvara Earring",
		body="Assimilator's Jubbah +2",
		hands="Jhakri Cuffs +2",
		left_ring="Rufescent Ring",
		right_ring="Ifrit Ring +1",
		back=Rosmerta.STRWS,
		waist="Prosilio Belt +1",
		legs="Samnuha Tights",
		feet=HerculeanFeet.STRWS}
    sets.precast.WS['Savage Blade'] = set_combine(sets.precast.WS, sets.Savage)
	
	sets.Expiacion = {
		ammo="Floestone",
		head=HerculeanHead.WS,
		neck="Caro Necklace",
		left_ear="Moonshade Earring",
		right_ear="Ishvara Earring",
		body="Assimilator's Jubbah +2",
		hands="Jhakri Cuffs +2",
		left_ring="Rufescent Ring",
		right_ring="Ifrit Ring +1",
		back=Rosmerta.STRWS,
		waist="Prosilio Belt +1",
		legs="Samnuha Tights",
		feet=HerculeanFeet.STRWS}
    sets.precast.WS['Expiacion'] = set_combine(sets.precast.WS, sets.Expiacion)
	
	sets.Sanguine = {
		ammo="Pemphredo Tathlum",
		head="Pixie Hairpin +1",
		neck="Baetyl Pendant",
		left_ear="Friomisi Earring",
		right_ear="Novio Earring",
		body="Jhakri Robe +2",
		hands="Jhakri Cuffs +2",
		left_ring="Shiva Ring +1",
		right_ring="Archon Ring",
        back=Rosmerta.Nuke,
		waist="Eschan Stone",
		legs="Amalric Slops",
		feet="Amalric Nails"}
    sets.precast.WS['Sanguine Blade'] = set_combine(sets.precast.WS, sets.Sanguine)
	
	------------------------------------------------------------------------------------------------
	------------------------------------------- Misc Sets ------------------------------------------
	------------------------------------------------------------------------------------------------
	
    sets.resting = {}
    sets.defense.PDT = {
		ammo="Staunch Tathlum",
		head="Ayanmo Zucchetto +2",
		neck="Loricate Torque +1",
		left_ear="Cessance Earring",
		right_ear="Telos Earring",
		body="Ayanmo Corazza +2",
		hands=HerculeanHands.DT,
		left_ring="Purity Ring",
		right_ring="Defending Ring",
		back="Shadow Mantle",
		waist="Flume Belt +1",
		legs="Ayanmo Cosciales +2",
		feet="Ayanmo Gambieras +2"}	
    sets.defense.MDT = {
		ammo="Staunch Tathlum",
		head="Dampening Tam",
		neck="Warder's Charm +1",
		left_ear="Eabani Earring",
		right_ear="Telos Earring",
		body="Ayanmo Corazza +2",
		hands=HerculeanHands.DT,
		left_ring="Purity Ring",
		right_ring="Shadow Ring",
		back="Reiki Cloak",
		waist="Reiki Yotai",
		legs="Ayanmo Cosciales +2",
		feet="Ayanmo Gambieras +2"}	
	sets.defense.Meva = sets.defense.MDT
    sets.Kiting = {legs="Carmine Cuisses +1"}
    sets.latent_refresh = {waist="Fucho-no-obi"}
    sets.buff.Doom = {left_ring="Purity Ring",right_ring="Saida Ring",waist="Gishdubar sash"}
end

function job_pretarget(spell, action, spellMap, eventArgs)
    if spell.type:endswith('Magic') and buffactive.silence then
        eventArgs.cancel = true
        send_command('input /item "Echo Drops" <me>')
		add_to_chat(122, "Silenced, Auto-Echo")
    end
    if state.Buff[spell.english] ~= nil then
        state.Buff[spell.english] = true
    end
end

function change_midcast(spell, action, spellMap, eventArgs)
end
	
function job_precast(spell, action, spellMap, eventArgs)
	if state.Buff[spell.english] ~= nil then
		state.Buff[spell.english] = true
	end
	if buffactive['Terror'] or buffactive['Stun'] then
		eventArgs.cancel = true
		add_to_chat(122, "Unable to act, action cancelled")
		return	
	end
    if unbridled_spells:contains(spell.english) and not state.Buff['Unbridled Learning'] then
        eventArgs.cancel = true
        windower.send_command('@input /ja "Unbridled Learning" <me>;wait 1.5;input /ma "'..spell.name..'" '..spell.target.name)
    end
	if spell.english == 'Lunge' then
        local abil_recasts = windower.ffxi.get_ability_recasts()
        if abil_recasts[spell.recast_id] > 0 then
            send_command('input /jobability "Swipe" <t>')
            add_to_chat(122, '***Lunge Aborted: Timer on Cooldown -- Downgrading to Swipe.***')
            eventArgs.cancel = true
            return
        end
    end
	if spell.english == 'Circle Blade' and state.TreasureMode.value ~= 'None' then
		equip(sets.TreasureHunter)
	elseif spell.english=='Sneak Attack' or spell.english=='Trick Attack' or spell.type == 'WeaponSkill' then
		if state.TreasureMode.value == 'SATA' or state.TreasureMode.value == 'Fulltime' then
			equip(sets.TreasureHunter)
		end
	end
	if spell.english == 'Unda' then
		if state.RuneMode.value == 'Lux' then
            send_command('input /jobability "Lux" <me>')
            add_to_chat(122, 'Lux -- Light')
            eventArgs.cancel = true
            return	
		elseif state.RuneMode.value == 'Tenebrae' then
            send_command('input /jobability "Tenebrae" <me>')
            add_to_chat(122, 'Tenebrae -- Dark')
            eventArgs.cancel = true
            return		
        elseif state.RuneMode.value == 'Ignis' then
            send_command('input /jobability "Ignis" <me>')
            add_to_chat(122, 'Ignis -- Fire (Ice)')
            eventArgs.cancel = true
            return	
		elseif state.RuneMode.value == 'Gelus' then
            send_command('input /jobability "Gelus" <me>')
            add_to_chat(122, 'Gelus -- Ice (Wind)')
            eventArgs.cancel = true
            return
		elseif state.RuneMode.value == 'Flabra' then
            send_command('input /jobability "Flabra" <me>')
            add_to_chat(122, 'Flabra -- Wind (Earth)')
            eventArgs.cancel = true
            return	
		elseif state.RuneMode.value == 'Tellus' then
            send_command('input /jobability "Tellus" <me>')
            add_to_chat(122, 'Tellus -- Earth (Thunder)')
            eventArgs.cancel = true
            return	
		elseif state.RuneMode.value == 'Sulpor' then
            send_command('input /jobability "Sulpor" <me>')
            add_to_chat(122, 'Sulpor -- Thunder (Water)')
            eventArgs.cancel = true
            return	
		elseif state.RuneMode.value == 'Unda' then
            add_to_chat(122, 'Unda -- Water (Fire)')
            return
        end
    end
end

function job_post_precast(spell, action, spellMap, eventArgs)
	if spell.english == 'Aeolian Edge' and state.TreasureMode.value ~= 'None' then
		equip(sets.TreasureHunter)
	elseif spell.english=='Sneak Attack' or spell.english=='Trick Attack' or spell.type == 'WeaponSkill' then
		if state.TreasureMode.value == 'SATA' or state.TreasureMode.value == 'Fulltime' then
			equip(sets.TreasureHunter)
		end
	end
end

function job_post_midcast(spell, action, spellMap, eventArgs)
	if spellMap == 'Healing' or spellMap == 'Cure' then	
		if spell.target.type == 'SELF' then	
			if 'Light' == world.day_element or 'Light' == world.weather_element then
				equip(sets.midcast.self_healing)
				--add_to_chat(122, "Weather Cure Self")
			else 
				equip(sets.midcast.self_healing)
				--add_to_chat(122, "Cure Self")
			end
		else
			equip(sets.midcast.Cure)
			--add_to_chat(122, "Cure")
		end	
    elseif spell.skill == 'Blue Magic' and state.Buff.Diffusion then
		equip(sets.buff.Diffusion) 
	elseif spell.skill == 'Blue Magic' and spell.en ~= 'Mighty Guard' then
		if spell.en == 'White Wind' then
			equip(sets.midcast.self_healing)			
		elseif spellMap:startswith('Magic') then
		--add_to_chat(122, spellMap)
			if spell.element == world.day_element or spell.element == world.weather_element then
				if state.MagicBurst.value then
					equipSet=set_combine(equipSet,sets.magic_burst)			
					equipSet = set_combine(equipSet, {waist="Hachirin-No-Obi"})
					equip(equipSet)
					--add_to_chat(122, "Weather Magic Burst")
				else 
					equipSet = set_combine(equipSet, {waist="Hachirin-No-Obi"})
					equip(equipSet)
					--add_to_chat(122, "Weather Nuke")
				end
			elseif state.MagicBurst.value then
				equipSet=set_combine(equipSet,sets.magic_burst)		
				equip(equipSet)
				add_to_chat(122, "Magic Burst")
			end	
		end
	elseif spell.skill == 'Enhancing Magic' then		
		if spell.en == 'Aquaveil' then
			equip(sets.midcast.Aquaveil)
		elseif spell.en == 'Refresh' then
			equip(sets.midcast.Refresh)
		elseif spell.en == 'Phalanx' then
			equip(sets.midcast.Phalanx)
		else equip(sets.midcast['Enhancing Magic'])
		end
    elseif spell.skill == 'Elemental Magic' then
		equip(sets.midcast['Blue Magic'].Magical)
	end
end

function job_self_command(cmdParams, eventArgs)
	command = cmdParams[1]:lower()
	if command == 'demring' then
		equip({left_ring="Dimensional Ring (Dem)"})
		send_command('gs disable left_ring;wait 10;input /item "Dimensional Ring (Dem)" <me>;wait 1;input /item "Dimensional Ring (Dem)" <me>;wait 10;gs enable left_ring')
	end
	if command=='mainweapon' then
		enable('main','sub')
		mainswap=1
		send_command('gs c cycle mainweapon')
	end
	command2 = cmdParams[2]
end

function customize_melee_set(meleeSet)
	if state.TreasureMode.value == 'Fulltime' then
		meleeSet = set_combine(meleeSet, sets.TreasureHunter)
	end
	if mainswap then
		mainswap=0
		enable('main','sub')
		equip(sets.mainweapon[state.mainweapon.value])
		disable('main','sub')
	end
	return meleeSet
end

mainswap = 1
function job_get_spell_map(spell, default_spell_map)
    if spell.skill == 'Blue Magic' then
        for category,spell_list in pairs(blue_magic_maps) do
            if spell_list:contains(spell.english) then
                return category
            end
        end
    end
end

function display_current_job_state(eventArgs)
	local msg = 'BLU青'

	msg = msg .. ' :: '
	msg = msg .. '[Weapon: '..state.mainweapon.current .. ']'
	msg = msg .. ' '
	msg = msg .. '[Offense: '..state.OffenseMode.current..']'
	msg = msg .. ' '
	msg = msg .. '[WS: '..state.WeaponskillMode.current .. ']'
	msg = msg .. ' '
	if state.DefenseMode.value ~= 'None' then
		msg = msg .. '['..state.DefenseMode.value .. ']'
	end
	
	add_to_chat(060, msg)
	eventArgs.handled = true
end

function customize_idle_set(idleSet)	
    if player.mpp < 51 then
        idleSet = set_combine(idleSet, sets.latent_refresh)
    end
	if mainswap then
		mainswap=0
		enable('main','sub')
		equip(sets.mainweapon[state.mainweapon.value])
		disable('main','sub')
	end
    return idleSet
end

function determine_haste_group()
    classes.CustomMeleeGroups:clear()
		-- buffactive[33] = Haste/Haste II 15%/30%
		-- buffactive[604] = Mighty Guard 15%
		-- buffactive[580] = Indi/Geo-Haste 29.9%/35.4%/40.9%
		-- buffactive[370] = Haste Samba 10%(Main) 5%(Sub)
		-- buffactive[228] = Embrava 30%
		-- Victory March +3/+4/+5 :: 14%/15.6%/17.1%
		-- Advancing March +3/+4/+5 :: 10.9%/12.5%/14%
	if (buffactive[580] and ( buffactive.march or buffactive[33] or buffactive.embrava or buffactive[604])) or  --Indi/Geo-Haste + Anything
		(buffactive.embrava and (buffactive.march or buffactive[33] or buffactive[604])) or  --Embrava + anything
		(buffactive.march == 2 and (buffactive[33] or buffactive[604])) or  --March x2 + Anything
		(buffactive[33] and buffactive[604] and buffactive.march) then --Haste + Mighty Guard + March(s)
			classes.CustomMeleeGroups:append('MaxHaste')
	elseif ((buffactive[604] or buffactive[33]) and buffactive['haste samba'] and buffactive.march == 1) or --Mighty Guard/Haste + Samba + March
		(buffactive.march == 2 and buffactive['haste samba']) or
		(buffactive[580] and buffactive['haste samba']) then 
            classes.CustomMeleeGroups:append('MaxHaste')
	elseif ( buffactive.march == 2 ) or --March x2
		((buffactive[33] or buffactive[604]) and buffactive.march == 1 ) or  --Mighty Guard/Haste + March
		(buffactive[580] ) or  --Indi/Geo-Haste
		(buffactive[33] and buffactive[604]) then  --Haste + Mighty Guard
			classes.CustomMeleeGroups:append('MaxHaste')
	elseif buffactive[33] or buffactive[604] or buffactive.march == 2 then
			classes.CustomMeleeGroups:append('MidHaste')
	end
end

function job_buff_change(buff, gain)
    if S{'haste','march','mighty guard','embrava','haste samba','geo-haste','indi-haste'}:contains(buff:lower()) then
        determine_haste_group()
        if not midaction() then
            handle_equipping_gear(player.status)
        end
    end
    if state.Buff[buff] ~= nil then
        if not midaction() then
            handle_equipping_gear(player.status)
        end
    end
	if buffactive['Haste'] then
        if buffactive['Mighty Guard'] and state.HybridMode.value == 'Normal' then
            state.CombatForm:set("Haste")
		else
			state.CombatForm:reset()
			update_combat_form()		
		end
    end
end	

function job_update(cmdParams, eventArgs)
	th_update(cmdParams, eventArgs)
    update_combat_form()
    determine_haste_group()
end

function th_action_check(category, param)
	if category == 2 or
		(category == 3 and param == 30) or
		(category == 6 and info.default_ja_ids:contains(param)) or
		(category == 14 and info.default_u_ja_ids:contains(param))
		then return true
	end
end

function update_combat_form()
    if player.equipment.sub == "Genbu's Shield" or player.equipment.sub == 'empty' then
        state.CombatForm:reset()
    else
        state.CombatForm:set('DW')
    end
end

function job_status_change(newStatus, oldStatus, eventArgs)
    if newStatus == 'Engaged' then
        update_combat_form()
    end
end

function select_default_macro_book()
    if player.sub_job == 'RDM' then
        set_macro_page(2, 7)
    elseif player.sub_job == 'BLM' then
        set_macro_page(2, 7)		
    else
        set_macro_page(1, 7)
    end
end

function set_lockstyle()
	send_command('wait 2; input /lockstyleset 6')
end
